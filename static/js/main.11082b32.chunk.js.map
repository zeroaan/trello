{"version":3,"sources":["store/actions/types.ts","store/reducers/trello.ts","store/reducers/index.ts","store/index.ts","components/BoardCreate.tsx","store/actions/trello.ts","components/Navbar.tsx","components/TrelloBoards.tsx","components/Trello.tsx","components/CardContent.tsx","components/Card.tsx","components/ListTitle.tsx","components/ListAction.tsx","components/List.tsx","components/Board.tsx","App.tsx","index.tsx"],"names":["CHANGE_BOARD_NAME","ADD_BOARD","STAR_BOARD","DELETE_BOARD","CHANGE_LIST_TITLE","ADD_LIST","COPY_LIST","DELETE_LIST","SORT_LIST","ADD_CARD","EDIT_CARD","DELETE_CARD","initialState","boardId","listId","cardId","starCount","boards","id","star","boardName","lists","title","cards","text","BoardReducer","state","action","type","newBoard","i","length","newBoardName","count","splice","index","newTitle","newCardId","newCard","j","droppableIdStart","droppableIdEnd","list","find","card","droppableIndexStart","droppableIndexEnd","listStart","listEnd","listIndex","console","log","rootReducer","combineReducers","trello","store","applyMiddleware","ReduxThunk","createStore","createStoreWithMiddleware","Reducer","window","__REDUX_DEVTOOLS_EXTENSION__","useStyles","makeStyles","position","top","left","width","height","zIndex","backgroundColor","addBoard","margin","addBoardtitle","addBoardInput","fontSize","outline","border","borderRadius","padding","resize","display","addBoardBt","marginTop","color","cursor","closeIcon","BoardCreate","setCreateBoard","classes","history","useHistory","dispatch","useDispatch","useSelector","useState","setNewBoard","onClickClose","className","Card","placeholder","onChange","e","value","target","maxLength","autoFocus","onClick","push","appbar","boxShadow","toolbar","justifyContent","minHeight","flexbox","homeLink","textDecoration","homeiconbutton","background","homebutton","textTransform","typography","fontFamily","right","userSelect","addiconbutton","avatar","Navbar","createBoard","AppBar","Toolbar","to","IconButton","Button","Typography","variant","Avatar","DivBoards","styled","div","DivBoardBox","DivBoardLink","Link","TrelloBoards","map","v","DivHome","Trello","opacity","editIcon","blackBox","editListInput","editListBt","deleteListBt","CardContent","edit","setCardEditBox","editList","setEditList","useEffect","onClickEditOpen","onClickEditClose","onChangeEditList","onClickSave","editCard","onClickDelete","deleteCard","style","Paper","maxWidth","wordBreak","DivCardMargin","ListCard","cardEditBox","draggableId","String","provided","draggableProps","dragHandleProps","ref","innerRef","CardHeaderTitle","CardHeader","InputTitle","input","ListTitle","changeTitle","setChangeTitle","textTitle","setTextTitle","onClickTitle","onSubmitForm","preventDefault","onBlurInput","onChangeInput","changeListTitle","onSubmit","onBlur","disableTypography","listAc","listAcTitle","textAlign","listAcClose","listAcHr","listAcdivBt","flexDirection","alignItems","listAcBt","listAcdiv","listAcaddListInput","listAcaddListBt","listAcDeleteListBt","ListAction","setActionOpen","newList","setNewList","copyAction","setCopyAction","deleteAction","setDeleteAction","onClickListAcClose","onClickListAcAddCard","onClickListAcCopy","onClickListAcDelete","onChangeList","onClickAddList","copyList","onClickDeleteList","deleteList","onMouseLeave","disableRipple","flexShrink","overflow","menuBt","fontWeight","addBt","addBtText","addCardInput","addCardBt","cardContent","maxHeight","listAcBack","List","actionOpen","setCard","cardAdd","useRef","cardInput","displayBlock","current","displayNone","onDragOver","droppableId","droppableProps","CardActions","addCard","screen","marginBottom","boardNameText","flex","whiteSpace","boardNameForm","boardNameInput","starBt","deleteBt","addList","addListInput","addListBt","deleteBoardbox","deleteBoard","deleteBoardtitle","deleteBoarddesc","deleteBoardBt","closeIconDeleteBoard","Board","match","useRouteMatch","Number","params","firstBoardName","boardStar","forEach","setBoardName","bnEl","wtEl","stEl","addListEl","deleteBoardEl","changeBoardName","onClickStar","starBoard","scrollWidth","onDragEnd","result","destination","source","sortList","undefined","App","basename","process","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.11082b32.chunk.js","sourcesContent":["export const CHANGE_BOARD_NAME = \"CHANGE_BOARD_NAME\" as const;\r\nexport const ADD_BOARD = \"ADD_BOARD\" as const;\r\nexport const STAR_BOARD = \"STAR_BOARD\" as const;\r\nexport const DELETE_BOARD = \"DELETE_BOARD\" as const;\r\n\r\nexport const CHANGE_LIST_TITLE = \"CHANGE_LIST_TITLE\" as const;\r\nexport const ADD_LIST = \"ADD_LIST\" as const;\r\nexport const COPY_LIST = \"COPY_LIST\" as const;\r\nexport const DELETE_LIST = \"DELETE_LIST\" as const;\r\nexport const SORT_LIST = \"SORT_LIST\" as const;\r\n\r\nexport const ADD_CARD = \"ADD_CARD\" as const;\r\nexport const EDIT_CARD = \"EDIT_CARD\" as const;\r\nexport const DELETE_CARD = \"DELETE_CARD\" as const;\r\n","import {\r\n  CHANGE_BOARD_NAME,\r\n  ADD_BOARD,\r\n  STAR_BOARD,\r\n  DELETE_BOARD,\r\n  CHANGE_LIST_TITLE,\r\n  ADD_LIST,\r\n  COPY_LIST,\r\n  DELETE_LIST,\r\n  SORT_LIST,\r\n  ADD_CARD,\r\n  EDIT_CARD,\r\n  DELETE_CARD,\r\n} from \"../actions/types\";\r\nimport {\r\n  ChangeBoardNameAction,\r\n  AddBoardAction,\r\n  StarBoardAction,\r\n  DeleteBoardAction,\r\n  ChangeListTitleAction,\r\n  AddListAction,\r\n  CopyListAction,\r\n  DeleteListAction,\r\n  SortListAction,\r\n  AddCardAction,\r\n  EditCardAction,\r\n  DeleteCardAction,\r\n} from \"../actions/trello\";\r\n\r\nexport type CardType = {\r\n  id: string;\r\n  text: string;\r\n}[];\r\nexport type ListType = {\r\n  id: string;\r\n  title: string;\r\n  cards: CardType;\r\n}[];\r\nexport type BoardType = {\r\n  id: number;\r\n  star: boolean;\r\n  boardName: string;\r\n  lists: ListType;\r\n};\r\n\r\nexport interface BoardState {\r\n  boardId: number;\r\n  listId: number;\r\n  cardId: number;\r\n  starCount: number;\r\n  boards: BoardType[];\r\n}\r\n\r\nconst initialState: BoardState = {\r\n  boardId: 2,\r\n  listId: 6,\r\n  cardId: 18,\r\n  starCount: 1,\r\n  boards: [\r\n    {\r\n      id: 0,\r\n      star: true,\r\n      boardName: \"first board\",\r\n      lists: [\r\n        {\r\n          id: `list-${0}`,\r\n          title: \"To do\",\r\n          cards: [\r\n            { id: `card-${0}`, text: \"doing\" },\r\n            { id: `card-${1}`, text: \"test a game\" },\r\n            { id: `card-${2}`, text: \"post\" },\r\n            { id: `card-${3}`, text: \"hello\" },\r\n          ],\r\n        },\r\n        {\r\n          id: `list-${1}`,\r\n          title: \"Doing\",\r\n          cards: [\r\n            { id: `card-${4}`, text: \"go to school\" },\r\n            { id: `card-${5}`, text: \"watch\" },\r\n          ],\r\n        },\r\n        {\r\n          id: `list-${2}`,\r\n          title: \"Complete\",\r\n          cards: [\r\n            { id: `card-${6}`, text: \"pratice\" },\r\n            { id: `card-${7}`, text: \"finish\" },\r\n            { id: `card-${8}`, text: \"complete\" },\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 1,\r\n      star: false,\r\n      boardName: \"second board\",\r\n      lists: [\r\n        {\r\n          id: `list-${3}`,\r\n          title: \"To do\",\r\n          cards: [\r\n            { id: `card-${9}`, text: \"wow\" },\r\n            { id: `card-${10}`, text: \"my second board\" },\r\n            { id: `card-${11}`, text: \"front\" },\r\n          ],\r\n        },\r\n        {\r\n          id: `list-${4}`,\r\n          title: \"Doing\",\r\n          cards: [\r\n            { id: `card-${12}`, text: \"buy coffee\" },\r\n            { id: `card-${13}`, text: \"movie\" },\r\n            { id: `card-${14}`, text: \"go to park\" },\r\n            { id: `card-${15}`, text: \"learn math\" },\r\n          ],\r\n        },\r\n        {\r\n          id: `list-${5}`,\r\n          title: \"Complete\",\r\n          cards: [\r\n            { id: `card-${16}`, text: \"go to the gym\" },\r\n            { id: `card-${17}`, text: \"computer\" },\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n};\r\n\r\ntype ListReducerActions =\r\n  | ChangeBoardNameAction\r\n  | AddBoardAction\r\n  | StarBoardAction\r\n  | DeleteBoardAction\r\n  | ChangeListTitleAction\r\n  | AddListAction\r\n  | CopyListAction\r\n  | DeleteListAction\r\n  | SortListAction\r\n  | AddCardAction\r\n  | EditCardAction\r\n  | DeleteCardAction;\r\nconst BoardReducer = (state = initialState, action: ListReducerActions) => {\r\n  switch (action.type) {\r\n    case CHANGE_BOARD_NAME: {\r\n      const newBoard: BoardType[] = [...state.boards];\r\n      let i = 0;\r\n      while (i < newBoard.length) {\r\n        if (newBoard[i].id === action.boardId) {\r\n          newBoard[i].boardName = action.newBoardName;\r\n          break;\r\n        }\r\n        i = i + 1;\r\n      }\r\n      return { ...state, boards: [...newBoard] };\r\n    }\r\n    case ADD_BOARD: {\r\n      const newBoard: BoardType[] = [\r\n        ...state.boards,\r\n        {\r\n          id: state.boardId,\r\n          star: false,\r\n          boardName: action.newBoardName,\r\n          lists: [\r\n            { id: `list-${state.listId}`, title: \"To do\", cards: [] },\r\n            {\r\n              id: `list-${state.listId + 1}`,\r\n              title: \"Doing\",\r\n              cards: [],\r\n            },\r\n            {\r\n              id: `list-${state.listId + 2}`,\r\n              title: \"Complete\",\r\n              cards: [],\r\n            },\r\n          ],\r\n        },\r\n      ];\r\n      return {\r\n        ...state,\r\n        boards: [...newBoard],\r\n        boardId: state.boardId + 1,\r\n        listId: state.listId + 3,\r\n      };\r\n    }\r\n    case STAR_BOARD: {\r\n      const newBoard: BoardType[] = [...state.boards];\r\n      let count = 0;\r\n      let i = 0;\r\n      while (i < newBoard.length) {\r\n        if (newBoard[i].id === action.boardId) {\r\n          newBoard[i].star = !newBoard[i].star;\r\n        }\r\n        if (newBoard[i].star === true) {\r\n          count = count + 1;\r\n        }\r\n        i = i + 1;\r\n      }\r\n      return { ...state, boards: [...newBoard], starCount: count };\r\n    }\r\n    case DELETE_BOARD: {\r\n      const newBoard: BoardType[] = [...state.boards];\r\n      let count = state.starCount;\r\n      let i = 0;\r\n      while (i < newBoard.length) {\r\n        if (newBoard[i].id === action.boardId) {\r\n          if (newBoard[i].star === true) {\r\n            count = count - 1;\r\n          }\r\n          newBoard.splice(i, 1);\r\n        }\r\n        i = i + 1;\r\n      }\r\n      return { ...state, boards: [...newBoard], starCount: count };\r\n    }\r\n    case CHANGE_LIST_TITLE: {\r\n      const newBoard: BoardType[] = [...state.boards];\r\n      let i = 0;\r\n      while (i < newBoard.length) {\r\n        if (newBoard[i].id === action.boardId) {\r\n          newBoard[i].lists[action.index].title = action.newTitle;\r\n          break;\r\n        }\r\n        i = i + 1;\r\n      }\r\n      return { ...state, boards: [...newBoard] };\r\n    }\r\n    case ADD_LIST: {\r\n      const newBoard: BoardType[] = [...state.boards];\r\n      let i = 0;\r\n      while (i < newBoard.length) {\r\n        if (newBoard[i].id === action.boardId) {\r\n          newBoard[i].lists = [\r\n            ...newBoard[i].lists,\r\n            {\r\n              id: `list-${state.listId}`,\r\n              title: action.title,\r\n              cards: [],\r\n            },\r\n          ];\r\n          break;\r\n        }\r\n        i = i + 1;\r\n      }\r\n      return { ...state, boards: [...newBoard], listId: state.listId + 1 };\r\n    }\r\n    case COPY_LIST: {\r\n      const newBoard: BoardType[] = [...state.boards];\r\n      let newCardId = state.cardId;\r\n      let i = 0;\r\n      while (i < newBoard.length) {\r\n        if (newBoard[i].id === action.boardId) {\r\n          const newCard = [...newBoard[i].lists[action.index].cards];\r\n          newCardId += newCard.length;\r\n          let j = 0;\r\n          while (j < newCard.length) {\r\n            newCard[j] = { ...newCard[j], id: `card-${state.cardId + j}` };\r\n            j = j + 1;\r\n          }\r\n          newBoard[i].lists.splice(action.index + 1, 0, {\r\n            id: `list-${state.listId}`,\r\n            title: action.title,\r\n            cards: [...newCard],\r\n          });\r\n          break;\r\n        }\r\n        i = i + 1;\r\n      }\r\n      return {\r\n        ...state,\r\n        boards: [...newBoard],\r\n        listId: state.listId + 1,\r\n        cardId: newCardId,\r\n      };\r\n    }\r\n    case DELETE_LIST: {\r\n      const newBoard: BoardType[] = [...state.boards];\r\n      let i = 0;\r\n      while (i < newBoard.length) {\r\n        if (newBoard[i].id === action.boardId) {\r\n          newBoard[i].lists.splice(action.index, 1);\r\n          break;\r\n        }\r\n        i = i + 1;\r\n      }\r\n      return { ...state, boards: [...newBoard] };\r\n    }\r\n    case SORT_LIST: {\r\n      const newBoard: BoardType[] = [...state.boards];\r\n      let i = 0;\r\n      while (i < newBoard.length) {\r\n        if (newBoard[i].id === action.boardId) {\r\n          if (action.droppableIdStart === action.droppableIdEnd) {\r\n            const list = newBoard[i].lists.find(\r\n              (list) => action.droppableIdStart === list.id\r\n            );\r\n            if (list) {\r\n              const card = list.cards.splice(action.droppableIndexStart, 1);\r\n              list.cards.splice(action.droppableIndexEnd, 0, ...card);\r\n            }\r\n          }\r\n          if (action.droppableIdStart !== action.droppableIdEnd) {\r\n            const listStart = newBoard[i].lists.find(\r\n              (list) => action.droppableIdStart === list.id\r\n            );\r\n            const listEnd = newBoard[i].lists.find(\r\n              (list) => action.droppableIdEnd === list.id\r\n            );\r\n            if (listStart && listEnd) {\r\n              const card = listStart.cards.splice(\r\n                action.droppableIndexStart,\r\n                1\r\n              );\r\n              listEnd.cards.splice(action.droppableIndexEnd, 0, ...card);\r\n            }\r\n          }\r\n          break;\r\n        }\r\n        i = i + 1;\r\n      }\r\n      return { ...state, boards: [...newBoard] };\r\n    }\r\n    case ADD_CARD: {\r\n      const newBoard: BoardType[] = [...state.boards];\r\n      let i = 0;\r\n      while (i < newBoard.length) {\r\n        if (newBoard[i].id === action.boardId) {\r\n          newBoard[i].lists[action.index].cards = [\r\n            ...newBoard[i].lists[action.index].cards,\r\n            {\r\n              id: `card-${state.cardId}`,\r\n              text: action.card,\r\n            },\r\n          ];\r\n          break;\r\n        }\r\n        i = i + 1;\r\n      }\r\n      return { ...state, boards: [...newBoard], cardId: state.cardId + 1 };\r\n    }\r\n    case EDIT_CARD: {\r\n      const newBoard: BoardType[] = [...state.boards];\r\n      let i = 0;\r\n      while (i < newBoard.length) {\r\n        if (newBoard[i].id === action.boardId) {\r\n          newBoard[i].lists[action.listIndex].cards[action.index].text =\r\n            action.newCard;\r\n          break;\r\n        }\r\n        i = i + 1;\r\n      }\r\n      return { ...state, boards: [...newBoard] };\r\n    }\r\n    case DELETE_CARD: {\r\n      const newBoard: BoardType[] = [...state.boards];\r\n      let i = 0;\r\n      while (i < newBoard.length) {\r\n        if (newBoard[i].id === action.boardId) {\r\n          newBoard[i].lists[action.listIndex].cards.splice(action.index, 1);\r\n          break;\r\n        }\r\n        i = i + 1;\r\n      }\r\n      console.log(newBoard);\r\n      return { ...state, boards: [...newBoard] };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default BoardReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport trello from \"./trello\";\r\n\r\nconst rootReducer = combineReducers({\r\n  trello,\r\n});\r\n\r\nexport default rootReducer;\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport ReduxThunk from \"redux-thunk\";\r\nimport Reducer from \"store/reducers\";\r\n\r\nconst createStoreWithMiddleware = applyMiddleware(ReduxThunk)(createStore);\r\n\r\nexport const store = createStoreWithMiddleware(\r\n  Reducer,\r\n  (window as any).__REDUX_DEVTOOLS_EXTENSION__ &&\r\n    (window as any).__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n","import React from \"react\";\r\nimport { useState, Dispatch, SetStateAction } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nimport { addBoard } from \"store/actions/trello\";\r\nimport { RootState } from \"store/reducers\";\r\nimport { BoardState } from \"store/reducers/trello\";\r\n\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  newBoard: {\r\n    position: \"fixed\",\r\n    top: 0,\r\n    left: 0,\r\n    width: \"100vw\",\r\n    height: \"100vh\",\r\n    zIndex: 1100,\r\n    backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n  },\r\n  addBoard: {\r\n    backgroundColor: \"rgb(235,236,240)\",\r\n    width: \"370px\",\r\n    height: \"200px\",\r\n    margin: \"auto\",\r\n    position: \"relative\",\r\n    top: \"230px\",\r\n  },\r\n  addBoardtitle: {\r\n    position: \"relative\",\r\n    top: \"25px\",\r\n    left: \"43px\",\r\n  },\r\n  addBoardInput: {\r\n    position: \"relative\",\r\n    top: \"50px\",\r\n    left: \"40px\",\r\n    fontSize: \"15px\",\r\n    outline: \"none\",\r\n    border: \"2px solid rgb(0,121,191)\",\r\n    borderRadius: \"5px\",\r\n    width: \"256px\",\r\n    height: \"17px\",\r\n    padding: \"10px 10px\",\r\n    resize: \"none\",\r\n    \"&::-webkit-scrollbar\": {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  addBoardBt: {\r\n    position: \"relative\",\r\n    top: \"60px\",\r\n    left: \"115px\",\r\n    outline: \"none\",\r\n    border: \"none\",\r\n    zIndex: 1200,\r\n    borderRadius: \"5px\",\r\n    backgroundColor: \"rgb(90,172,68)\",\r\n    marginTop: \"10px\",\r\n    color: \"white\",\r\n    padding: \"8px 16px\",\r\n    fontSize: \"15px\",\r\n    cursor: \"pointer\",\r\n  },\r\n  closeIcon: {\r\n    position: \"relative\",\r\n    top: \"-50px\",\r\n    left: \"180px\",\r\n    cursor: \"pointer\",\r\n    color: \"rgb(108,120,141)\",\r\n    fontSize: \"28px\",\r\n  },\r\n});\r\n\r\ninterface Props {\r\n  setCreateBoard: Dispatch<SetStateAction<boolean>>;\r\n}\r\n\r\nconst BoardCreate: React.FC<Props> = ({ setCreateBoard }) => {\r\n  const classes = useStyles();\r\n\r\n  const history = useHistory();\r\n\r\n  const dispatch = useDispatch();\r\n  const { boardId } = useSelector<RootState, BoardState>(\r\n    (state: RootState) => state.trello\r\n  );\r\n\r\n  const [newBoard, setNewBoard] = useState(\"\");\r\n\r\n  const onChangeBoard = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { value } = e.target;\r\n    setNewBoard(value);\r\n  };\r\n  const onClickAddBoard = () => {\r\n    if (newBoard !== \"\") {\r\n      onClickClose();\r\n      dispatch(addBoard(newBoard));\r\n      history.push(`/board/${boardId}`);\r\n    }\r\n  };\r\n  const onClickClose = () => {\r\n    setCreateBoard(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.newBoard}>\r\n        <Card className={classes.addBoard}>\r\n          <h3 className={classes.addBoardtitle}>New Board</h3>\r\n          <input\r\n            className={classes.addBoardInput}\r\n            placeholder=\"Input Board Name ...\"\r\n            onChange={onChangeBoard}\r\n            value={newBoard}\r\n            maxLength={15}\r\n            autoFocus\r\n          />\r\n          <button className={classes.addBoardBt} onClick={onClickAddBoard}>\r\n            Create a Board\r\n          </button>\r\n          <CloseIcon className={classes.closeIcon} onClick={onClickClose} />\r\n        </Card>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BoardCreate;\r\n","import {\r\n  CHANGE_BOARD_NAME,\r\n  ADD_BOARD,\r\n  STAR_BOARD,\r\n  DELETE_BOARD,\r\n  CHANGE_LIST_TITLE,\r\n  ADD_LIST,\r\n  COPY_LIST,\r\n  DELETE_LIST,\r\n  SORT_LIST,\r\n  ADD_CARD,\r\n  EDIT_CARD,\r\n  DELETE_CARD,\r\n} from \"./types\";\r\n\r\nexport interface ChangeBoardNameAction {\r\n  type: typeof CHANGE_BOARD_NAME;\r\n  newBoardName: string;\r\n  boardId: number;\r\n}\r\nexport interface AddBoardAction {\r\n  type: typeof ADD_BOARD;\r\n  newBoardName: string;\r\n}\r\nexport interface StarBoardAction {\r\n  type: typeof STAR_BOARD;\r\n  boardId: number;\r\n}\r\nexport interface DeleteBoardAction {\r\n  type: typeof DELETE_BOARD;\r\n  boardId: number;\r\n}\r\n\r\nexport interface ChangeListTitleAction {\r\n  type: typeof CHANGE_LIST_TITLE;\r\n  newTitle: string;\r\n  index: number;\r\n  boardId: number;\r\n}\r\n\r\nexport interface AddListAction {\r\n  type: typeof ADD_LIST;\r\n  title: string;\r\n  boardId: number;\r\n}\r\n\r\nexport interface CopyListAction {\r\n  type: typeof COPY_LIST;\r\n  title: string;\r\n  index: number;\r\n  boardId: number;\r\n}\r\n\r\nexport interface DeleteListAction {\r\n  type: typeof DELETE_LIST;\r\n  index: number;\r\n  boardId: number;\r\n}\r\n\r\nexport interface SortListAction {\r\n  type: typeof SORT_LIST;\r\n  boardId: number;\r\n  droppableIdStart: string;\r\n  droppableIdEnd: string;\r\n  droppableIndexStart: number;\r\n  droppableIndexEnd: number;\r\n  draggableId: string;\r\n}\r\n\r\nexport interface AddCardAction {\r\n  type: typeof ADD_CARD;\r\n  card: string;\r\n  index: number;\r\n  boardId: number;\r\n}\r\n\r\nexport interface EditCardAction {\r\n  type: typeof EDIT_CARD;\r\n  newCard: string;\r\n  index: number;\r\n  listIndex: number;\r\n  boardId: number;\r\n}\r\n\r\nexport interface DeleteCardAction {\r\n  type: typeof DELETE_CARD;\r\n  index: number;\r\n  listIndex: number;\r\n  boardId: number;\r\n}\r\n\r\nexport const changeBoardName = (newBoardName: string, boardId: number) => {\r\n  return {\r\n    type: CHANGE_BOARD_NAME,\r\n    newBoardName,\r\n    boardId,\r\n  };\r\n};\r\nexport const addBoard = (newBoardName: string) => {\r\n  return {\r\n    type: ADD_BOARD,\r\n    newBoardName,\r\n  };\r\n};\r\nexport const starBoard = (boardId: number) => {\r\n  return {\r\n    type: STAR_BOARD,\r\n    boardId,\r\n  };\r\n};\r\nexport const deleteBoard = (boardId: number) => {\r\n  return {\r\n    type: DELETE_BOARD,\r\n    boardId,\r\n  };\r\n};\r\n\r\nexport const changeListTitle = (\r\n  newTitle: string,\r\n  index: number,\r\n  boardId: number\r\n) => {\r\n  return {\r\n    type: CHANGE_LIST_TITLE,\r\n    newTitle,\r\n    index,\r\n    boardId,\r\n  };\r\n};\r\n\r\nexport const addList = (title: string, boardId: number) => {\r\n  return {\r\n    type: ADD_LIST,\r\n    title,\r\n    boardId,\r\n  };\r\n};\r\n\r\nexport const copyList = (title: string, index: number, boardId: number) => {\r\n  return {\r\n    type: COPY_LIST,\r\n    title,\r\n    index,\r\n    boardId,\r\n  };\r\n};\r\n\r\nexport const deleteList = (index: number, boardId: number) => {\r\n  return {\r\n    type: DELETE_LIST,\r\n    index,\r\n    boardId,\r\n  };\r\n};\r\n\r\nexport const sortList = (\r\n  boardId: number,\r\n  droppableIdStart: string,\r\n  droppableIdEnd: string,\r\n  droppableIndexStart: number,\r\n  droppableIndexEnd: number,\r\n  draggableId: string\r\n) => {\r\n  return {\r\n    type: SORT_LIST,\r\n    boardId,\r\n    droppableIdStart,\r\n    droppableIdEnd,\r\n    droppableIndexStart,\r\n    droppableIndexEnd,\r\n    draggableId,\r\n  };\r\n};\r\n\r\nexport const addCard = (card: string, index: number, boardId: number) => {\r\n  return {\r\n    type: ADD_CARD,\r\n    card,\r\n    index,\r\n    boardId,\r\n  };\r\n};\r\n\r\nexport const editCard = (\r\n  newCard: string,\r\n  index: number,\r\n  listIndex: number,\r\n  boardId: number\r\n) => {\r\n  return {\r\n    type: EDIT_CARD,\r\n    newCard,\r\n    index,\r\n    listIndex,\r\n    boardId,\r\n  };\r\n};\r\n\r\nexport const deleteCard = (\r\n  index: number,\r\n  listIndex: number,\r\n  boardId: number\r\n) => {\r\n  return {\r\n    type: DELETE_CARD,\r\n    index,\r\n    listIndex,\r\n    boardId,\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport BoardCreate from \"components/BoardCreate\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  appbar: {\r\n    backgroundColor: \"rgba(0, 0, 0, 0.1)\",\r\n    boxShadow: \"none\",\r\n  },\r\n  toolbar: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    minHeight: \"48px\",\r\n  },\r\n  flexbox: {\r\n    display: \"flex\",\r\n  },\r\n  homeLink: {\r\n    textDecoration: \"none\",\r\n    padding: \"5px\",\r\n  },\r\n  homeiconbutton: {\r\n    width: \"30px\",\r\n    height: \"30px\",\r\n    color: \"white\",\r\n    \"&:hover\": {\r\n      background: \"none\",\r\n    },\r\n  },\r\n  homebutton: {\r\n    backgroundColor: \"rgba(154,160,163, 0.9)\",\r\n    height: \"35px\",\r\n    textTransform: \"none\",\r\n    color: \"white\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"rgba(140,147,150, 0.9)\",\r\n    },\r\n  },\r\n  typography: {\r\n    fontFamily: `\"Jua\", sans-serif`,\r\n    position: \"relative\",\r\n    right: \"20px\",\r\n    userSelect: \"none\",\r\n  },\r\n  addiconbutton: {\r\n    margin: \"0px 15px\",\r\n    backgroundColor: \"rgba(154,160,163, 0.9)\",\r\n    width: \"35px\",\r\n    height: \"35px\",\r\n    borderRadius: \"5px\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"rgba(140,147,150, 0.9)\",\r\n    },\r\n  },\r\n  avatar: {\r\n    backgroundColor: \"rgb(223,225,230)\",\r\n    color: \"black\",\r\n    width: \"35px\",\r\n    height: \"35px\",\r\n    cursor: \"pointer\",\r\n  },\r\n});\r\n\r\nconst Navbar = () => {\r\n  const classes = useStyles();\r\n\r\n  const [createBoard, setCreateBoard] = useState(false);\r\n\r\n  const onClickNewBoard = () => {\r\n    setCreateBoard(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AppBar className={classes.appbar}>\r\n        <Toolbar className={classes.toolbar}>\r\n          <div className={classes.flexbox}>\r\n            <Link to=\"/\" className={classes.homeLink}>\r\n              <IconButton className={classes.homeiconbutton}>\r\n                <HomeIcon />\r\n              </IconButton>\r\n            </Link>\r\n            <Link to=\"/\" className={classes.homeLink}>\r\n              <Button className={classes.homebutton}>Boards</Button>\r\n            </Link>\r\n          </div>\r\n          <Typography className={classes.typography} variant=\"h6\">\r\n            Trello\r\n          </Typography>\r\n          <div className={classes.flexbox}>\r\n            <IconButton\r\n              className={classes.addiconbutton}\r\n              color=\"inherit\"\r\n              onClick={onClickNewBoard}\r\n            >\r\n              <AddIcon />\r\n            </IconButton>\r\n            <Avatar className={classes.avatar}>A</Avatar>\r\n          </div>\r\n          {createBoard ? <BoardCreate setCreateBoard={setCreateBoard} /> : null}\r\n        </Toolbar>\r\n      </AppBar>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { RootState } from \"store/reducers\";\r\nimport { BoardState } from \"store/reducers/trello\";\r\n\r\nconst DivBoards = styled.div`\r\n  margin-top: 10px;\r\n  width: 730px;\r\n  height: 150px;\r\n  display: flex;\r\n  flex-flow: nowrap;\r\n  overflow: auto;\r\n  &::-webkit-scrollbar {\r\n    height: 11px;\r\n  }\r\n  &::-webkit-scrollbar-thumb {\r\n    background-color: rgb(191, 196, 206);\r\n    border-radius: 10px;\r\n  }\r\n  &::-webkit-scrollbar-track {\r\n    background-color: rgb(218, 219, 226);\r\n    border-radius: 10px;\r\n  }\r\n`;\r\nconst DivBoardBox = styled.div`\r\n  border-radius: 3px;\r\n  background-color: white;\r\n  min-width: 145px;\r\n  max-width: 145px;\r\n  min-height: 80px;\r\n  max-height: 80px;\r\n  padding: 15px;\r\n  transition: all 0.3s ease;\r\n  &:hover {\r\n    backgroundcolor: rgb(231, 233, 237);\r\n  }\r\n`;\r\nconst DivBoardLink = styled(Link)`\r\n  position: relative;\r\n  left: -7px;\r\n  height: 80px;\r\n  text-decoration: none;\r\n  color: black;\r\n  font-size: 17px;\r\n  margin: 6px 8px;\r\n  &:hover {\r\n    color: black;\r\n  }\r\n`;\r\n\r\ninterface Props {\r\n  star?: boolean;\r\n}\r\n\r\nconst TrelloBoards: React.FC<Props> = ({ star }) => {\r\n  const { boards } = useSelector<RootState, BoardState>(\r\n    (state: RootState) => state.trello\r\n  );\r\n\r\n  const AllBoards = () => {\r\n    return (\r\n      <DivBoards>\r\n        {boards.map((v, i) => (\r\n          <DivBoardLink key={i} to={`/board/${v.id}`}>\r\n            <DivBoardBox>{v.boardName}</DivBoardBox>\r\n          </DivBoardLink>\r\n        ))}\r\n      </DivBoards>\r\n    );\r\n  };\r\n  const StarBoards = () => {\r\n    return (\r\n      <DivBoards>\r\n        {boards.map((v, i) => {\r\n          if (v.star === true) {\r\n            return (\r\n              <DivBoardLink key={i} to={`/board/${v.id}`}>\r\n                <DivBoardBox>{v.boardName}</DivBoardBox>\r\n              </DivBoardLink>\r\n            );\r\n          } else {\r\n            return null;\r\n          }\r\n        })}\r\n      </DivBoards>\r\n    );\r\n  };\r\n\r\n  return star ? StarBoards() : AllBoards();\r\n};\r\n\r\nexport default TrelloBoards;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { RootState } from \"store/reducers\";\r\nimport { BoardState } from \"store/reducers/trello\";\r\n\r\nimport Navbar from \"components/Navbar\";\r\nimport TrelloBoards from \"components/TrelloBoards\";\r\n\r\nconst DivHome = styled.div`\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\nconst DivBoardBox = styled.div`\r\n  margin: 20px;\r\n`;\r\n\r\nconst Trello = () => {\r\n  const { starCount } = useSelector<RootState, BoardState>(\r\n    (state: RootState) => state.trello\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <DivHome>\r\n        <DivBoardBox>\r\n          <h3>My Boards</h3>\r\n          <TrelloBoards />\r\n        </DivBoardBox>\r\n        {starCount === 0 ? null : (\r\n          <DivBoardBox>\r\n            <h3>Starred Boards</h3>\r\n            <TrelloBoards star />\r\n          </DivBoardBox>\r\n        )}\r\n      </DivHome>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Trello;\r\n","import React from \"react\";\r\nimport { useState, useEffect, Dispatch, SetStateAction } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { editCard, deleteCard } from \"store/actions/trello\";\r\n\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  list: {\r\n    minHeight: \"22px\",\r\n    position: \"relative\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    padding: \"12px\",\r\n    cursor: \"pointer\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"rgb(244,245,247)\",\r\n    },\r\n    \"&.dragging\": {\r\n      opacity: \"0.4\",\r\n    },\r\n    \"&:hover svg\": {\r\n      display: \"block\",\r\n    },\r\n  },\r\n  editIcon: {\r\n    color: \"rgb(131,140,145)\",\r\n    display: \"none\",\r\n    padding: \"10px\",\r\n    position: \"absolute\",\r\n    top: \"4px\",\r\n    right: \"4px\",\r\n    fontSize: \"16px\",\r\n    borderRadius: \"5px\",\r\n    \"&:hover\": {\r\n      color: \"black\",\r\n      backgroundColor: \"rgb(235,236,240)\",\r\n    },\r\n  },\r\n  blackBox: {\r\n    position: \"fixed\",\r\n    top: 0,\r\n    left: 0,\r\n    width: \"100vw\",\r\n    height: \"100vh\",\r\n    zIndex: 1100,\r\n    backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n  },\r\n  editListInput: {\r\n    position: \"absolute\",\r\n    top: \"-12px\",\r\n    left: 0,\r\n    fontSize: \"16px\",\r\n    outline: \"none\",\r\n    border: \"none\",\r\n    borderRadius: \"5px\",\r\n    width: \"252px\",\r\n    height: \"60px\",\r\n    padding: \"12px 12px\",\r\n    marginTop: \"12px\",\r\n    resize: \"none\",\r\n    zIndex: 1200,\r\n    \"&::-webkit-scrollbar\": {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  closeIcon: {\r\n    position: \"absolute\",\r\n    top: \"93px\",\r\n    left: \"245px\",\r\n    cursor: \"pointer\",\r\n    color: \"black\",\r\n    fontSize: \"25px\",\r\n    zIndex: 1200,\r\n  },\r\n  editListBt: {\r\n    position: \"absolute\",\r\n    top: \"80px\",\r\n    left: \"0px\",\r\n    outline: \"none\",\r\n    border: \"none\",\r\n    zIndex: 1200,\r\n    borderRadius: \"5px\",\r\n    backgroundColor: \"rgb(90,172,68)\",\r\n    marginTop: \"10px\",\r\n    color: \"white\",\r\n    padding: \"8px 21px\",\r\n    fontSize: \"16px\",\r\n    cursor: \"pointer\",\r\n  },\r\n  deleteListBt: {\r\n    position: \"absolute\",\r\n    top: \"80px\",\r\n    left: \"85px\",\r\n    outline: \"none\",\r\n    border: \"none\",\r\n    zIndex: 1200,\r\n    borderRadius: \"5px\",\r\n    backgroundColor: \"rgb(250,60,84)\",\r\n    marginTop: \"10px\",\r\n    color: \"white\",\r\n    padding: \"8px 15px\",\r\n    fontSize: \"16px\",\r\n    cursor: \"pointer\",\r\n  },\r\n});\r\n\r\ninterface Props {\r\n  edit?: boolean;\r\n  setCardEditBox: Dispatch<SetStateAction<boolean>>;\r\n  list: string;\r\n  index: number;\r\n  listIndex: number;\r\n  boardId: number;\r\n}\r\n\r\nconst CardContent: React.FC<Props> = ({\r\n  edit,\r\n  setCardEditBox,\r\n  list,\r\n  index,\r\n  listIndex,\r\n  boardId,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [editList, setEditList] = useState(list);\r\n\r\n  useEffect(() => {\r\n    setEditList(list);\r\n  }, [list]);\r\n\r\n  const onClickEditOpen = () => {\r\n    setCardEditBox(true);\r\n  };\r\n  const onClickEditClose = () => {\r\n    setCardEditBox(false);\r\n  };\r\n  const onChangeEditList = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n    const { value } = e.target;\r\n    setEditList(value);\r\n  };\r\n  const onClickSave = () => {\r\n    if (editList !== \"\") {\r\n      dispatch(editCard(editList, index, listIndex, boardId));\r\n    }\r\n    onClickEditClose();\r\n  };\r\n  const onClickDelete = () => {\r\n    dispatch(deleteCard(index, listIndex, boardId));\r\n    onClickEditClose();\r\n  };\r\n\r\n  const ContentCard = () => {\r\n    return (\r\n      <Paper className={classes.list}>\r\n        <p style={{ maxWidth: \"250px\", wordBreak: \"break-word\" }}>{list}</p>\r\n        <CreateIcon className={classes.editIcon} onClick={onClickEditOpen} />\r\n      </Paper>\r\n    );\r\n  };\r\n  const EditCard = () => {\r\n    return (\r\n      <>\r\n        <div className={classes.blackBox} onClick={onClickEditClose}></div>\r\n        <div style={{ height: \"82px\" }}></div>\r\n        <textarea\r\n          className={classes.editListInput}\r\n          placeholder=\"Input card ...\"\r\n          value={editList}\r\n          onChange={onChangeEditList}\r\n          autoFocus\r\n        />\r\n        <CloseIcon className={classes.closeIcon} onClick={onClickEditClose} />\r\n        <button className={classes.editListBt} onClick={onClickSave}>\r\n          Save\r\n        </button>\r\n        <button className={classes.deleteListBt} onClick={onClickDelete}>\r\n          Delete\r\n        </button>\r\n      </>\r\n    );\r\n  };\r\n\r\n  return edit ? EditCard() : ContentCard();\r\n};\r\n\r\nexport default CardContent;\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\nimport styled from \"styled-components\";\r\n\r\nimport CardContent from \"components/CardContent\";\r\n\r\nconst DivCardMargin = styled.div`\r\n  margin-bottom: 8px;\r\n`;\r\n\r\ninterface Props {\r\n  list: string;\r\n  cardId: string;\r\n  index: number;\r\n  listIndex: number;\r\n  boardId: number;\r\n}\r\n\r\nconst ListCard: React.FC<Props> = ({\r\n  list,\r\n  cardId,\r\n  index,\r\n  listIndex,\r\n  boardId,\r\n}) => {\r\n  const [cardEditBox, setCardEditBox] = useState(false);\r\n\r\n  return (\r\n    <div style={{ position: \"relative\" }}>\r\n      <Draggable\r\n        key={String(cardId)}\r\n        draggableId={String(cardId)}\r\n        index={index}\r\n      >\r\n        {(provided) => (\r\n          <DivCardMargin\r\n            {...provided.draggableProps}\r\n            {...provided.dragHandleProps}\r\n            ref={provided.innerRef}\r\n          >\r\n            <CardContent\r\n              list={list}\r\n              setCardEditBox={setCardEditBox}\r\n              index={index}\r\n              listIndex={listIndex}\r\n              boardId={boardId}\r\n            />\r\n          </DivCardMargin>\r\n        )}\r\n      </Draggable>\r\n      {cardEditBox ? (\r\n        <CardContent\r\n          edit\r\n          list={list}\r\n          setCardEditBox={setCardEditBox}\r\n          index={index}\r\n          listIndex={listIndex}\r\n          boardId={boardId}\r\n        />\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListCard;\r\n","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { changeListTitle } from \"store/actions/trello\";\r\n\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\n\r\nconst CardHeaderTitle = styled(CardHeader)`\r\n  margin: 13px 10px;\r\n  font-size: 18px;\r\n  width: 210px;\r\n  height: 1px;\r\n  cursor: pointer;\r\n`;\r\nconst InputTitle = styled.input`\r\n  margin: 13px;\r\n  padding: 2px 11px;\r\n  font-size: 18px;\r\n  outline: none;\r\n  border: 2px solid rgb(0, 121, 191);\r\n  border-radius: 5px;\r\n  width: 210px;\r\n  height: 25px;\r\n`;\r\n\r\ninterface Props {\r\n  title: string;\r\n  index: number;\r\n  boardId: number;\r\n}\r\n\r\nconst ListTitle: React.FC<Props> = ({ title, index, boardId }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [changeTitle, setChangeTitle] = useState(false);\r\n  const [textTitle, setTextTitle] = useState(title);\r\n\r\n  useEffect(() => {\r\n    setTextTitle(title);\r\n  }, [title]);\r\n\r\n  const onClickTitle = () => {\r\n    setChangeTitle(true);\r\n  };\r\n  const onSubmitForm = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    onBlurInput();\r\n  };\r\n  const onChangeInput = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { value } = e.target;\r\n    setTextTitle(value);\r\n  };\r\n  const onBlurInput = () => {\r\n    if (textTitle !== \"\") {\r\n      dispatch(changeListTitle(textTitle, index, boardId));\r\n    }\r\n    setChangeTitle(false);\r\n  };\r\n\r\n  const Title = () => {\r\n    return (\r\n      <CardHeaderTitle title={title} disableTypography onClick={onClickTitle} />\r\n    );\r\n  };\r\n  const TitleForm = () => {\r\n    return (\r\n      <form onSubmit={onSubmitForm}>\r\n        <InputTitle\r\n          value={textTitle}\r\n          onChange={onChangeInput}\r\n          onBlur={onBlurInput}\r\n          maxLength={15}\r\n          autoFocus\r\n        />\r\n      </form>\r\n    );\r\n  };\r\n\r\n  return changeTitle ? TitleForm() : Title();\r\n};\r\n\r\nexport default ListTitle;\r\n","import React from \"react\";\r\nimport { useState, Dispatch, SetStateAction } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { copyList, deleteList } from \"store/actions/trello\";\r\n\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  listAc: {\r\n    zIndex: 100,\r\n    position: \"absolute\",\r\n    top: \"13px\",\r\n    right: \"-160px\",\r\n    width: \"200px\",\r\n    height: \"165px\",\r\n    border: \"1px solid rgb(218,219,226)\",\r\n  },\r\n  listAcTitle: {\r\n    fontFamily: `\"Jua\", sans-serif`,\r\n    position: \"relative\",\r\n    top: \"8px\",\r\n    textAlign: \"center\",\r\n  },\r\n  listAcClose: {\r\n    position: \"absolute\",\r\n    top: \"12px\",\r\n    right: \"9px\",\r\n    fontSize: \"17px\",\r\n    cursor: \"pointer\",\r\n  },\r\n  listAcHr: {\r\n    position: \"relative\",\r\n    top: \"10px\",\r\n    width: \"170px\",\r\n    margin: \"auto\",\r\n    border: \"1px solid rgb(218,219,226)\",\r\n    backgroundColor: \"rgb(218,219,226)\",\r\n  },\r\n  listAcdivBt: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    marginTop: \"15px\",\r\n  },\r\n  listAcBt: {\r\n    width: \"179px\",\r\n  },\r\n  listAcdiv: {\r\n    margin: \"20px 15px\",\r\n  },\r\n  listAcaddListInput: {\r\n    fontSize: \"15px\",\r\n    outline: \"none\",\r\n    border: \"2px solid rgb(0,121,191)\",\r\n    borderRadius: \"5px\",\r\n    width: \"145px\",\r\n    height: \"12px\",\r\n    padding: \"10px 10px\",\r\n    margin: \"8px 0px\",\r\n    resize: \"none\",\r\n    \"&::-webkit-scrollbar\": {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  listAcaddListBt: {\r\n    position: \"relative\",\r\n    left: \"48px\",\r\n    borderRadius: \"5px\",\r\n    outline: \"none\",\r\n    border: \"none\",\r\n    backgroundColor: \"rgb(90,172,68)\",\r\n    color: \"white\",\r\n    padding: \"6px 13px\",\r\n    fontSize: \"15px\",\r\n    cursor: \"pointer\",\r\n  },\r\n  listAcDeleteListBt: {\r\n    margin: \"0 47px\",\r\n    borderRadius: \"5px\",\r\n    outline: \"none\",\r\n    border: \"none\",\r\n    backgroundColor: \"rgb(250,60,84)\",\r\n    color: \"white\",\r\n    padding: \"6px 16px\",\r\n    fontSize: \"15px\",\r\n    cursor: \"pointer\",\r\n  },\r\n});\r\n\r\ninterface Props {\r\n  setActionOpen: Dispatch<SetStateAction<boolean>>;\r\n  index: number;\r\n  boardId: number;\r\n}\r\n\r\nconst ListAction: React.FC<Props> = ({ setActionOpen, index, boardId }) => {\r\n  const classes = useStyles();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [newList, setNewList] = useState(\"\");\r\n  const [copyAction, setCopyAction] = useState(false);\r\n  const [deleteAction, setDeleteAction] = useState(false);\r\n\r\n  const onClickListAcClose = () => {\r\n    setActionOpen(false);\r\n  };\r\n  const onClickListAcAddCard = () => {\r\n    onClickListAcClose();\r\n  };\r\n  const onClickListAcCopy = () => {\r\n    setCopyAction(true);\r\n  };\r\n  const onClickListAcDelete = () => {\r\n    setDeleteAction(true);\r\n  };\r\n  const onChangeList = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { value } = e.target;\r\n    setNewList(value);\r\n  };\r\n  const onClickAddList = () => {\r\n    if (newList !== \"\") {\r\n      onClickListAcClose();\r\n      dispatch(copyList(newList, index, boardId));\r\n      setNewList(\"\");\r\n    }\r\n  };\r\n  const onClickDeleteList = () => {\r\n    onClickListAcClose();\r\n    dispatch(deleteList(index, boardId));\r\n  };\r\n\r\n  const ActionHome = () => {\r\n    return (\r\n      <div className={classes.listAcdivBt}>\r\n        <Button\r\n          className={classes.listAcBt}\r\n          onClick={onClickListAcAddCard}\r\n          disableRipple\r\n        >\r\n          Add Card\r\n        </Button>\r\n        <Button\r\n          className={classes.listAcBt}\r\n          onClick={onClickListAcCopy}\r\n          disableRipple\r\n        >\r\n          Copy List\r\n        </Button>\r\n        <Button\r\n          className={classes.listAcBt}\r\n          onClick={onClickListAcDelete}\r\n          disableRipple\r\n        >\r\n          Delete This List\r\n        </Button>\r\n      </div>\r\n    );\r\n  };\r\n  const ListCopy = () => {\r\n    return (\r\n      <div className={classes.listAcdiv}>\r\n        <p>Name</p>\r\n        <input\r\n          className={classes.listAcaddListInput}\r\n          placeholder=\"Input List title ...\"\r\n          onChange={onChangeList}\r\n          value={newList}\r\n          maxLength={15}\r\n          autoFocus\r\n        />\r\n        <button className={classes.listAcaddListBt} onClick={onClickAddList}>\r\n          Create\r\n        </button>\r\n      </div>\r\n    );\r\n  };\r\n  const ListDelete = () => {\r\n    return (\r\n      <div className={classes.listAcdiv}>\r\n        <p style={{ margin: \"35px 0 20px 0\" }}>삭제 후 되돌릴 수 없습니다.</p>\r\n        <button\r\n          className={classes.listAcDeleteListBt}\r\n          onClick={onClickDeleteList}\r\n        >\r\n          Delete\r\n        </button>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Paper className={classes.listAc} onMouseLeave={onClickListAcClose}>\r\n        <Typography className={classes.listAcTitle} variant=\"subtitle1\">\r\n          {copyAction\r\n            ? \"Copy List\"\r\n            : deleteAction\r\n            ? \"Delete List\"\r\n            : \"List Actions\"}\r\n        </Typography>\r\n        <CloseIcon\r\n          className={classes.listAcClose}\r\n          onClick={onClickListAcClose}\r\n        />\r\n        <hr className={classes.listAcHr} />\r\n        {copyAction ? ListCopy() : deleteAction ? ListDelete() : ActionHome()}\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ListAction;\r\n","import React from \"react\";\r\nimport { useState, useRef } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Droppable } from \"react-beautiful-dnd\";\r\n\r\nimport { addCard } from \"store/actions/trello\";\r\nimport { CardType } from \"store/reducers/trello\";\r\n\r\nimport ListCard from \"components/Card\";\r\nimport ListTitle from \"components/ListTitle\";\r\nimport ListAction from \"components/ListAction\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  list: {\r\n    flexShrink: 0,\r\n    position: \"relative\",\r\n    backgroundColor: \"rgb(235,236,240)\",\r\n    width: \"300px\",\r\n    height: \"100%\",\r\n    margin: \"0 0 0 16px\",\r\n    overflow: \"visible\",\r\n  },\r\n  menuBt: {\r\n    fontSize: \"18px\",\r\n    position: \"absolute\",\r\n    top: \"15px\",\r\n    right: \"12px\",\r\n    fontWeight: \"bold\",\r\n    outline: \"none\",\r\n    border: \"none\",\r\n    cursor: \"pointer\",\r\n    borderRadius: \"50px\",\r\n    backgroundColor: \"rgb(235,236,240)\",\r\n  },\r\n  addBt: {\r\n    width: \"100%\",\r\n    textTransform: \"none\",\r\n  },\r\n  addBtText: {\r\n    display: \"none\",\r\n    position: \"relative\",\r\n    top: \"-8px\",\r\n    left: \"-4px\",\r\n  },\r\n  addCardInput: {\r\n    boxShadow:\r\n      \"0px 2px 1px -1px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 1px 3px 0px rgba(0,0,0,0.12)\",\r\n    fontSize: \"15px\",\r\n    outline: \"none\",\r\n    border: \"none\",\r\n    borderRadius: \"5px\",\r\n    width: \"256px\",\r\n    height: \"60px\",\r\n    padding: \"10px 10px\",\r\n    marginTop: \"12px\",\r\n    resize: \"none\",\r\n    \"&::-webkit-scrollbar\": {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  addCardBt: {\r\n    borderRadius: \"5px\",\r\n    outline: \"none\",\r\n    border: \"none\",\r\n    backgroundColor: \"rgb(90,172,68)\",\r\n    marginTop: \"10px\",\r\n    color: \"white\",\r\n    padding: \"6px 10px\",\r\n    fontSize: \"16px\",\r\n    cursor: \"pointer\",\r\n  },\r\n  closeIcon: {\r\n    position: \"relative\",\r\n    top: \"7px\",\r\n    left: \"8px\",\r\n    cursor: \"pointer\",\r\n    color: \"rgb(108,120,141)\",\r\n    fontSize: \"25px\",\r\n  },\r\n  cardContent: {\r\n    padding: \"0 12px\",\r\n    overflow: \"auto\",\r\n    minHeight: \"5px\",\r\n    maxHeight: \"375px\",\r\n    \"&::-webkit-scrollbar\": {\r\n      width: \"8px\",\r\n    },\r\n    \"&::-webkit-scrollbar-thumb\": {\r\n      backgroundColor: \"rgb(191,196,206)\",\r\n      borderRadius: \"10px\",\r\n    },\r\n    \"&::-webkit-scrollbar-track\": {\r\n      backgroundColor: \"rgb(218,219,226)\",\r\n      borderRadius: \"10px\",\r\n    },\r\n  },\r\n  listAcBack: {\r\n    position: \"absolute\",\r\n    top: \"12px\",\r\n    left: \"9px\",\r\n    fontSize: \"15px\",\r\n    cursor: \"pointer\",\r\n    zIndex: 1,\r\n  },\r\n});\r\n\r\ninterface Props {\r\n  title: string;\r\n  list: CardType;\r\n  index: number;\r\n  boardId: number;\r\n  listId: string;\r\n}\r\n\r\nconst List: React.FC<Props> = ({ title, list, index, boardId, listId }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const classes = useStyles();\r\n\r\n  const [actionOpen, setActionOpen] = useState(false);\r\n\r\n  const [card, setCard] = useState(\"\");\r\n  const cardAdd = useRef<HTMLButtonElement>(null);\r\n  const cardInput = useRef<HTMLInputElement>(null);\r\n\r\n  const displayBlock = (\r\n    ref: React.RefObject<HTMLButtonElement | HTMLInputElement | HTMLDivElement>\r\n  ) => {\r\n    if (ref.current) {\r\n      ref.current.style.display = \"block\";\r\n    }\r\n  };\r\n  const displayNone = (\r\n    ref: React.RefObject<HTMLButtonElement | HTMLInputElement | HTMLDivElement>\r\n  ) => {\r\n    if (ref.current) {\r\n      ref.current.style.display = \"none\";\r\n    }\r\n  };\r\n  const onClickAddBt = () => {\r\n    displayBlock(cardInput);\r\n    displayNone(cardAdd);\r\n  };\r\n  const onClickAddCard = () => {\r\n    if (card !== \"\") {\r\n      dispatch(addCard(card, index, boardId));\r\n      setCard(\"\");\r\n    }\r\n  };\r\n  const onChangeCard = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n    const { value } = e.target;\r\n    setCard(value);\r\n  };\r\n  const onClickClose = () => {\r\n    displayBlock(cardAdd);\r\n    displayNone(cardInput);\r\n  };\r\n  const onDragOverCard = (e: React.DragEvent) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card className={classes.list} onDragOver={onDragOverCard}>\r\n        <ListTitle title={title} index={index} boardId={boardId} />\r\n        <button className={classes.menuBt} onClick={() => setActionOpen(true)}>\r\n          ⋯\r\n        </button>\r\n        {actionOpen ? (\r\n          <ListAction\r\n            setActionOpen={setActionOpen}\r\n            index={index}\r\n            boardId={boardId}\r\n          />\r\n        ) : null}\r\n        <Droppable droppableId={String(listId)}>\r\n          {(provided) => (\r\n            <CardContent\r\n              {...provided.droppableProps}\r\n              ref={provided.innerRef}\r\n              className={classes.cardContent}\r\n            >\r\n              {list.map((v, i) => (\r\n                <ListCard\r\n                  key={i}\r\n                  list={v.text}\r\n                  cardId={v.id}\r\n                  index={i}\r\n                  listIndex={index}\r\n                  boardId={boardId}\r\n                />\r\n              ))}\r\n              {provided.placeholder}\r\n            </CardContent>\r\n          )}\r\n        </Droppable>\r\n        <CardActions>\r\n          <Button\r\n            ref={cardAdd}\r\n            className={classes.addBt}\r\n            onClick={onClickAddBt}\r\n            disableRipple\r\n          >\r\n            + Add a Card\r\n          </Button>\r\n          <div ref={cardInput} className={classes.addBtText}>\r\n            <textarea\r\n              className={classes.addCardInput}\r\n              placeholder=\"Input card ...\"\r\n              onChange={onChangeCard}\r\n              value={card}\r\n            />\r\n            <button className={classes.addCardBt} onClick={onClickAddCard}>\r\n              Add Card\r\n            </button>\r\n            <CloseIcon className={classes.closeIcon} onClick={onClickClose} />\r\n          </div>\r\n        </CardActions>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import React from \"react\";\r\nimport { useState, useRef, useEffect } from \"react\";\r\nimport { useRouteMatch, useHistory } from \"react-router\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { DragDropContext } from \"react-beautiful-dnd\";\r\n\r\nimport {\r\n  changeBoardName,\r\n  starBoard,\r\n  deleteBoard,\r\n  addList,\r\n  sortList,\r\n} from \"store/actions/trello\";\r\nimport { RootState } from \"store/reducers\";\r\nimport { BoardState, ListType, CardType } from \"store/reducers/trello\";\r\n\r\nimport List from \"components/List\";\r\nimport Navbar from \"components/Navbar\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  screen: {\r\n    maxWidth: \"98vw\",\r\n    maxHeight: \"90vh\",\r\n    position: \"relative\",\r\n    top: \"58px\",\r\n    left: \"1vw\",\r\n  },\r\n  boardName: {\r\n    display: \"flex\",\r\n    marginBottom: \"12px\",\r\n  },\r\n  boardNameText: {\r\n    position: \"absolute\",\r\n    top: 0,\r\n    left: \"60px\",\r\n    padding: \"4px 12px 2px 12px\",\r\n    flex: \"0 1 auto\",\r\n    color: \"white\",\r\n    borderRadius: \"5px\",\r\n    fontFamily: `\"Jua\", sans-serif`,\r\n    cursor: \"pointer\",\r\n    fontSize: \"18px\",\r\n    whiteSpace: \"pre\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"rgba(154,160,163, 0.9)\",\r\n    },\r\n  },\r\n  boardNameForm: {\r\n    position: \"absolute\",\r\n    top: 0,\r\n    left: \"60px\",\r\n  },\r\n  boardNameInput: {\r\n    padding: \"0 12px\",\r\n    outline: \"none\",\r\n    border: \"none\",\r\n    borderRadius: \"5px\",\r\n    height: \"34px\",\r\n    fontSize: \"18px\",\r\n    whiteSpace: \"pre\",\r\n    display: \"none\",\r\n  },\r\n  starBt: {\r\n    margin: \"0 16px\",\r\n    backgroundColor: \"rgba(154,160,163, 0.9)\",\r\n    width: \"35px\",\r\n    height: \"35px\",\r\n    textTransform: \"none\",\r\n    outline: \"none\",\r\n    border: \"none\",\r\n    borderRadius: \"5px\",\r\n    fontWeight: \"bold\",\r\n    cursor: \"pointer\",\r\n    fontSize: \"16px\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"rgba(171,177,180, 0.9)\",\r\n    },\r\n  },\r\n  deleteBt: {\r\n    position: \"absolute\",\r\n    right: \"20px\",\r\n    backgroundColor: \"rgba(154,160,163, 0.9)\",\r\n    width: \"35px\",\r\n    height: \"35px\",\r\n    textTransform: \"none\",\r\n    outline: \"none\",\r\n    border: \"none\",\r\n    borderRadius: \"5px\",\r\n    fontWeight: \"bold\",\r\n    cursor: \"pointer\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"rgba(171,177,180, 0.9)\",\r\n    },\r\n  },\r\n  addBt: {\r\n    margin: \"0 32px 0 16px\",\r\n    flexShrink: 0,\r\n    width: \"300px\",\r\n    height: \"40px\",\r\n    textTransform: \"none\",\r\n    backgroundColor: \"rgb(161,168,171)\",\r\n    color: \"white\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"rgba(171,177,180, 0.9)\",\r\n    },\r\n  },\r\n  addList: {\r\n    flexShrink: 0,\r\n    position: \"absolute\",\r\n    top: 0,\r\n    left: 0,\r\n    backgroundColor: \"rgb(235,236,240)\",\r\n    width: \"300px\",\r\n    height: \"115px\",\r\n    margin: \"0 0 0 16px\",\r\n    display: \"none\",\r\n  },\r\n  addBtText: {},\r\n  addListInput: {\r\n    fontSize: \"15px\",\r\n    outline: \"none\",\r\n    border: \"2px solid rgb(0,121,191)\",\r\n    borderRadius: \"5px\",\r\n    width: \"256px\",\r\n    height: \"17px\",\r\n    padding: \"10px 10px\",\r\n    margin: \"12px 9px\",\r\n    resize: \"none\",\r\n    \"&::-webkit-scrollbar\": {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  addListBt: {\r\n    position: \"absolute\",\r\n    top: \"55px\",\r\n    left: \"10px\",\r\n    outline: \"none\",\r\n    border: \"none\",\r\n    zIndex: 1200,\r\n    borderRadius: \"5px\",\r\n    backgroundColor: \"rgb(90,172,68)\",\r\n    marginTop: \"10px\",\r\n    color: \"white\",\r\n    padding: \"8px 16px\",\r\n    fontSize: \"14px\",\r\n    cursor: \"pointer\",\r\n  },\r\n  closeIcon: {\r\n    position: \"relative\",\r\n    top: \"4px\",\r\n    left: \"100px\",\r\n    cursor: \"pointer\",\r\n    color: \"rgb(108,120,141)\",\r\n    fontSize: \"25px\",\r\n  },\r\n  deleteBoardbox: {\r\n    display: \"none\",\r\n    position: \"fixed\",\r\n    top: 0,\r\n    left: 0,\r\n    width: \"100vw\",\r\n    height: \"100vh\",\r\n    zIndex: 1100,\r\n    backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n  },\r\n  deleteBoard: {\r\n    backgroundColor: \"rgb(235,236,240)\",\r\n    width: \"370px\",\r\n    height: \"200px\",\r\n    margin: \"auto\",\r\n    position: \"relative\",\r\n    top: \"230px\",\r\n  },\r\n  deleteBoardtitle: {\r\n    position: \"relative\",\r\n    top: \"25px\",\r\n    left: \"43px\",\r\n  },\r\n  deleteBoarddesc: {\r\n    position: \"relative\",\r\n    top: \"50px\",\r\n    left: \"83px\",\r\n    fontSize: \"20px\",\r\n    color: \"black\",\r\n  },\r\n  deleteBoardBt: {\r\n    position: \"relative\",\r\n    top: \"70px\",\r\n    left: \"110px\",\r\n    outline: \"none\",\r\n    border: \"none\",\r\n    zIndex: 1200,\r\n    borderRadius: \"5px\",\r\n    backgroundColor: \"rgb(250,60,84)\",\r\n    marginTop: \"10px\",\r\n    color: \"white\",\r\n    padding: \"8px 16px\",\r\n    fontSize: \"15px\",\r\n    cursor: \"pointer\",\r\n  },\r\n  closeIconDeleteBoard: {\r\n    position: \"relative\",\r\n    top: \"-35px\",\r\n    left: \"165px\",\r\n    cursor: \"pointer\",\r\n    color: \"rgb(108,120,141)\",\r\n    fontSize: \"28px\",\r\n  },\r\n});\r\n\r\nconst Board = () => {\r\n  const classes = useStyles();\r\n\r\n  const history = useHistory();\r\n  const match = useRouteMatch<{ boardId: string }>();\r\n  const boardId = Number(match.params.boardId);\r\n\r\n  const dispatch = useDispatch();\r\n  const { boards } = useSelector<RootState, BoardState>(\r\n    (state: RootState) => state.trello\r\n  );\r\n  let lists: ListType = [];\r\n  let firstBoardName: string = \"\";\r\n  let boardStar: boolean = false;\r\n  boards.forEach((v, i) => {\r\n    if (v.id === boardId) {\r\n      lists = boards[i].lists;\r\n      firstBoardName = boards[i].boardName;\r\n      boardStar = boards[i].star;\r\n    }\r\n  });\r\n\r\n  const [boardName, setBoardName] = useState(firstBoardName);\r\n  const [newList, setNewList] = useState(\"\");\r\n\r\n  const bnEl = useRef<HTMLInputElement>(null);\r\n  const wtEl = useRef<HTMLInputElement>(null);\r\n  const stEl = useRef<HTMLButtonElement>(null);\r\n  const addListEl = useRef<HTMLDivElement>(null);\r\n  const deleteBoardEl = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    setBoardName(firstBoardName);\r\n  }, [firstBoardName]);\r\n\r\n  const displayBlock = (\r\n    ref: React.RefObject<HTMLInputElement | HTMLDivElement>\r\n  ) => {\r\n    if (ref.current) {\r\n      ref.current.style.display = \"block\";\r\n    }\r\n  };\r\n  const displayNone = (\r\n    ref: React.RefObject<HTMLInputElement | HTMLDivElement>\r\n  ) => {\r\n    if (ref.current) {\r\n      ref.current.style.display = \"none\";\r\n    }\r\n  };\r\n  const onClickText = () => {\r\n    displayBlock(bnEl);\r\n    if (bnEl.current && wtEl.current) {\r\n      bnEl.current.style.width = wtEl.current.scrollWidth - 24 + \"px\";\r\n    }\r\n  };\r\n  const onSubmitForm = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    onBlurInput();\r\n  };\r\n  const onBlurInput = () => {\r\n    if (boardName !== \"\") {\r\n      displayNone(bnEl);\r\n      dispatch(changeBoardName(boardName, boardId));\r\n    }\r\n  };\r\n  const onChangeName = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { value } = e.target;\r\n    setBoardName(value);\r\n    if (bnEl.current && wtEl.current) {\r\n      bnEl.current.style.width = wtEl.current.scrollWidth - 8 + \"px\";\r\n    }\r\n  };\r\n  const onClickStar = () => {\r\n    dispatch(starBoard(boardId));\r\n  };\r\n  const onClickDeleteBoard = () => {\r\n    displayNone(deleteBoardEl);\r\n    dispatch(deleteBoard(boardId));\r\n    history.push(\"/\");\r\n  };\r\n  const onChangeList = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { value } = e.target;\r\n    setNewList(value);\r\n  };\r\n  const onClickAddList = () => {\r\n    if (newList !== \"\") {\r\n      dispatch(addList(newList, boardId));\r\n      onClickClose();\r\n    }\r\n  };\r\n  const onClickClose = () => {\r\n    displayNone(addListEl);\r\n    setNewList(\"\");\r\n  };\r\n\r\n  const onDragEnd = (result: any) => {\r\n    const { destination, source, draggableId } = result;\r\n\r\n    if (!destination) {\r\n      return;\r\n    }\r\n    dispatch(\r\n      sortList(\r\n        boardId,\r\n        source.droppableId,\r\n        destination.droppableId,\r\n        source.index,\r\n        destination.index,\r\n        draggableId\r\n      )\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <div className={classes.screen}>\r\n        <div className={classes.boardName}>\r\n          {boardStar ? (\r\n            <button\r\n              ref={stEl}\r\n              style={{ color: \"yellow\" }}\r\n              className={classes.starBt}\r\n              onClick={onClickStar}\r\n            >\r\n              ☆\r\n            </button>\r\n          ) : (\r\n            <button\r\n              ref={stEl}\r\n              style={{ color: \"white\" }}\r\n              className={classes.starBt}\r\n              onClick={onClickStar}\r\n            >\r\n              ☆\r\n            </button>\r\n          )}\r\n          <Typography\r\n            ref={wtEl}\r\n            className={classes.boardNameText}\r\n            variant=\"h6\"\r\n            onClick={onClickText}\r\n          >\r\n            {boardName}\r\n          </Typography>\r\n          <button\r\n            className={classes.deleteBt}\r\n            onClick={() => displayBlock(deleteBoardEl)}\r\n          >\r\n            <DeleteIcon style={{ fontSize: \"20px\", color: \"white\" }} />\r\n          </button>\r\n          <div ref={deleteBoardEl} className={classes.deleteBoardbox}>\r\n            <Card className={classes.deleteBoard}>\r\n              <div>\r\n                <h3 className={classes.deleteBoardtitle}>Delete Board</h3>\r\n                <p className={classes.deleteBoarddesc}>\r\n                  삭제 후 되돌릴 수 없습니다.\r\n                </p>\r\n                <button\r\n                  className={classes.deleteBoardBt}\r\n                  onClick={onClickDeleteBoard}\r\n                >\r\n                  Delete This Board\r\n                </button>\r\n                <CloseIcon\r\n                  className={classes.closeIconDeleteBoard}\r\n                  onClick={() => displayNone(deleteBoardEl)}\r\n                />\r\n              </div>\r\n            </Card>\r\n          </div>\r\n          <form className={classes.boardNameForm} onSubmit={onSubmitForm}>\r\n            <input\r\n              ref={bnEl}\r\n              className={classes.boardNameInput}\r\n              value={boardName}\r\n              onChange={onChangeName}\r\n              onBlur={onBlurInput}\r\n              maxLength={15}\r\n            />\r\n          </form>\r\n        </div>\r\n        <DragDropContext onDragEnd={onDragEnd}>\r\n          <div style={{ display: \"flex\" }}>\r\n            {lists === undefined ? null : (\r\n              <>\r\n                {lists.map(\r\n                  (\r\n                    v: { id: string; title: string; cards: CardType },\r\n                    i: number\r\n                  ) => (\r\n                    <List\r\n                      key={i}\r\n                      title={v.title}\r\n                      list={v.cards}\r\n                      index={i}\r\n                      boardId={boardId}\r\n                      listId={v.id}\r\n                    />\r\n                  )\r\n                )}\r\n              </>\r\n            )}\r\n            <div style={{ position: \"relative\" }}>\r\n              <Button\r\n                className={classes.addBt}\r\n                onClick={() => displayBlock(addListEl)}\r\n                disableRipple\r\n              >\r\n                <div style={{ position: \"absolute\", left: \"20px\" }}>\r\n                  + Add a List\r\n                </div>\r\n              </Button>\r\n\r\n              <Card ref={addListEl} className={classes.addList}>\r\n                <div className={classes.addBtText}>\r\n                  <input\r\n                    className={classes.addListInput}\r\n                    placeholder=\"Input List title ...\"\r\n                    onChange={onChangeList}\r\n                    value={newList}\r\n                    maxLength={15}\r\n                  />\r\n                  <button\r\n                    className={classes.addListBt}\r\n                    onClick={onClickAddList}\r\n                  >\r\n                    Add List\r\n                  </button>\r\n                  <CloseIcon\r\n                    className={classes.closeIcon}\r\n                    onClick={onClickClose}\r\n                  />\r\n                </div>\r\n              </Card>\r\n            </div>\r\n          </div>\r\n        </DragDropContext>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Trello from \"components/Trello\";\nimport Board from \"components/Board\";\nimport \"app.css\";\n\nconst App = () => {\n  return (\n    <>\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <Switch>\n          <Route exact path=\"/\" component={Trello} />\n          <Route exact path=\"/board/:boardId\" component={Board} />\n        </Switch>\n      </BrowserRouter>\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}