{"version":3,"sources":["store/actions/types.ts","store/actions/trello.ts","components/Navbar.tsx","components/Trello.tsx","components/ListCard.tsx","components/List.tsx","components/Board.tsx","App.tsx","store/reducers/trello.ts","store/reducers/index.ts","store/index.ts","index.tsx"],"names":["CHANGE_BOARD_NAME","ADD_BOARD","STAR_BOARD","DELETE_BOARD","CHANGE_LIST_TITLE","ADD_LIST","COPY_LIST","DELETE_LIST","ADD_CARD","EDIT_CARD","DELETE_CARD","changeBoardName","newBoardName","boardId","type","changeListTitle","newTitle","index","useStyles","makeStyles","theme","appbar","backgroundColor","boxShadow","toolbar","display","justifyContent","minHeight","avatar","color","width","height","cursor","div","button","margin","textTransform","homeiconbutton","marginTop","background","addiconbutton","borderRadius","typography","fontFamily","position","right","userSelect","homeLink","textDecoration","newBoard","top","left","zIndex","addBoard","addBoardtitle","addBoardInput","fontSize","outline","border","padding","resize","addBoardBt","closeIcon","Navbar","history","useHistory","dispatch","useDispatch","classes","newBoardId","useSelector","state","trello","useState","setNewBoard","newBoardEl","useRef","onClickClose","current","style","AppBar","className","Toolbar","to","IconButton","Button","Typography","variant","onClick","Avatar","ref","Card","placeholder","onChange","e","value","target","maxLength","push","screen","maxWidth","maxHeight","flexDirection","alignItems","boards","flexFlow","overflow","boardLink","boardBox","minWidth","transition","Trello","starCount","map","v","i","id","boardName","star","list","marginBottom","editIcon","editList","editListform","editListInput","editListBt","deleteListBt","ListCard","listIndex","setEditList","editListEl","editBlack","editEl","paperEl","textareaEl","useEffect","Paper","onMouseOver","onMouseOut","wordBreak","scrollWidth","onSubmit","preventDefault","newCard","editCard","deleteCard","flexShrink","listName","listNameForm","menuBt","fontWeight","listNameInput","paddingTop","paddingLeft","addBt","addBtText","addCardInput","addCardBt","cardContent","listAc","listAcTitle","textAlign","listAcClose","listAcBack","listAcHr","listAcdivBt","listAcBt","listAcdiv","listAcaddListInput","listAcaddListBt","listAcDeleteListBt","List","title","textTitle","setTextTitle","card","setCard","newList","setNewList","cardAdd","textInput","cardInput","listAcEl","listAcCpEl","listAcDlEl","onClickAddBt","onClickListAcClose","CardHeader","disableTypography","required","onBlur","onMouseLeave","disableRipple","copyList","deleteList","CardContent","CardActions","addCard","boardNameText","flex","whiteSpace","boardNameForm","boardNameInput","starBt","deleteBt","addList","addListInput","addListBt","deleteBoardbox","deleteBoard","deleteBoardtitle","deleteBoarddesc","deleteBoardBt","closeIconDeleteBoard","Board","match","useRouteMatch","Number","params","lists","firstBoardName","boardStar","forEach","setBoardName","setTextInput","bnEl","wtEl","stEl","addListEl","deleteBoardEl","onClickStar","starBoard","onClickCloseDeleteBoard","undefined","cards","App","basename","process","exact","path","component","initialState","BoardReducer","action","length","count","splice","rootReducer","combineReducers","store","applyMiddleware","ReduxThunk","createStore","createStoreWithMiddleware","Reducer","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6f8e16f4.chunk.js","sourcesContent":["export const CHANGE_BOARD_NAME = \"CHANGE_BOARD_NAME\" as const;\r\nexport const ADD_BOARD = \"ADD_BOARD\" as const;\r\nexport const STAR_BOARD = \"STAR_BOARD\" as const;\r\nexport const DELETE_BOARD = \"DELETE_BOARD\" as const;\r\n\r\nexport const CHANGE_LIST_TITLE = \"CHANGE_LIST_TITLE\" as const;\r\nexport const ADD_LIST = \"ADD_LIST\" as const;\r\nexport const COPY_LIST = \"COPY_LIST\" as const;\r\nexport const DELETE_LIST = \"DELETE_LIST\" as const;\r\n\r\nexport const ADD_CARD = \"ADD_CARD\" as const;\r\nexport const EDIT_CARD = \"EDIT_CARD\" as const;\r\nexport const DELETE_CARD = \"DELETE_CARD\" as const;\r\n","import {\r\n  CHANGE_BOARD_NAME,\r\n  ADD_BOARD,\r\n  STAR_BOARD,\r\n  DELETE_BOARD,\r\n  CHANGE_LIST_TITLE,\r\n  ADD_LIST,\r\n  COPY_LIST,\r\n  DELETE_LIST,\r\n  ADD_CARD,\r\n  EDIT_CARD,\r\n  DELETE_CARD,\r\n} from \"./types\";\r\n\r\nexport interface ChangeBoardNameAction {\r\n  type: typeof CHANGE_BOARD_NAME;\r\n  newBoardName: string;\r\n  boardId: number;\r\n}\r\nexport interface AddBoardAction {\r\n  type: typeof ADD_BOARD;\r\n  newBoardName: string;\r\n}\r\nexport interface StarBoardAction {\r\n  type: typeof STAR_BOARD;\r\n  boardId: number;\r\n}\r\nexport interface DeleteBoardAction {\r\n  type: typeof DELETE_BOARD;\r\n  boardId: number;\r\n}\r\n\r\nexport interface ChangeListTitleAction {\r\n  type: typeof CHANGE_LIST_TITLE;\r\n  newTitle: string;\r\n  index: number;\r\n  boardId: number;\r\n}\r\n\r\nexport interface AddListAction {\r\n  type: typeof ADD_LIST;\r\n  title: string;\r\n  boardId: number;\r\n}\r\n\r\nexport interface CopyListAction {\r\n  type: typeof COPY_LIST;\r\n  title: string;\r\n  index: number;\r\n  boardId: number;\r\n}\r\n\r\nexport interface DeleteListAction {\r\n  type: typeof DELETE_LIST;\r\n  index: number;\r\n  boardId: number;\r\n}\r\n\r\nexport interface AddCardAction {\r\n  type: typeof ADD_CARD;\r\n  card: string;\r\n  index: number;\r\n  boardId: number;\r\n}\r\n\r\nexport interface EditCardAction {\r\n  type: typeof EDIT_CARD;\r\n  newCard: string;\r\n  index: number;\r\n  listIndex: number;\r\n  boardId: number;\r\n}\r\n\r\nexport interface DeleteCardAction {\r\n  type: typeof DELETE_CARD;\r\n  index: number;\r\n  listIndex: number;\r\n  boardId: number;\r\n}\r\n\r\nexport const changeBoardName = (newBoardName: string, boardId: number) => {\r\n  return {\r\n    type: CHANGE_BOARD_NAME,\r\n    newBoardName,\r\n    boardId,\r\n  };\r\n};\r\nexport const addBoard = (newBoardName: string) => {\r\n  return {\r\n    type: ADD_BOARD,\r\n    newBoardName,\r\n  };\r\n};\r\nexport const starBoard = (boardId: number) => {\r\n  return {\r\n    type: STAR_BOARD,\r\n    boardId,\r\n  };\r\n};\r\nexport const deleteBoard = (boardId: number) => {\r\n  return {\r\n    type: DELETE_BOARD,\r\n    boardId,\r\n  };\r\n};\r\n\r\nexport const changeListTitle = (\r\n  newTitle: string,\r\n  index: number,\r\n  boardId: number\r\n) => {\r\n  return {\r\n    type: CHANGE_LIST_TITLE,\r\n    newTitle,\r\n    index,\r\n    boardId,\r\n  };\r\n};\r\n\r\nexport const addList = (title: string, boardId: number) => {\r\n  return {\r\n    type: ADD_LIST,\r\n    title,\r\n    boardId,\r\n  };\r\n};\r\n\r\nexport const copyList = (title: string, index: number, boardId: number) => {\r\n  return {\r\n    type: COPY_LIST,\r\n    title,\r\n    index,\r\n    boardId,\r\n  };\r\n};\r\n\r\nexport const deleteList = (index: number, boardId: number) => {\r\n  return {\r\n    type: DELETE_LIST,\r\n    index,\r\n    boardId,\r\n  };\r\n};\r\n\r\nexport const addCard = (card: string, index: number, boardId: number) => {\r\n  return {\r\n    type: ADD_CARD,\r\n    card,\r\n    index,\r\n    boardId,\r\n  };\r\n};\r\n\r\nexport const editCard = (\r\n  newCard: string,\r\n  index: number,\r\n  listIndex: number,\r\n  boardId: number\r\n) => {\r\n  return {\r\n    type: EDIT_CARD,\r\n    newCard,\r\n    index,\r\n    listIndex,\r\n    boardId,\r\n  };\r\n};\r\n\r\nexport const deleteCard = (\r\n  index: number,\r\n  listIndex: number,\r\n  boardId: number\r\n) => {\r\n  return {\r\n    type: DELETE_CARD,\r\n    index,\r\n    listIndex,\r\n    boardId,\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { useState, useRef } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { RootState } from \"store/reducers\";\r\nimport { BoardState } from \"store/reducers/trello\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addBoard } from \"../store/actions/trello\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appbar: {\r\n    backgroundColor: \"rgba(0, 0, 0, 0.1)\",\r\n    boxShadow: \"none\",\r\n  },\r\n  toolbar: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    minHeight: \"48px\",\r\n  },\r\n  avatar: {\r\n    backgroundColor: \"rgb(223,225,230)\",\r\n    color: \"black\",\r\n    width: \"35px\",\r\n    height: \"35px\",\r\n    cursor: \"pointer\",\r\n  },\r\n  div: {\r\n    display: \"flex\",\r\n  },\r\n  button: {\r\n    margin: \"6px 15px\",\r\n    backgroundColor: \"rgba(154,160,163, 0.9)\",\r\n    height: \"35px\",\r\n    textTransform: \"none\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"rgba(140,147,150, 0.9)\",\r\n    },\r\n  },\r\n  homeiconbutton: {\r\n    marginTop: \"8px\",\r\n    width: \"30px\",\r\n    height: \"30px\",\r\n    \"&:hover\": {\r\n      background: \"none\",\r\n    },\r\n  },\r\n  addiconbutton: {\r\n    margin: \"0px 15px\",\r\n    backgroundColor: \"rgba(154,160,163, 0.9)\",\r\n    width: \"35px\",\r\n    height: \"35px\",\r\n    borderRadius: \"5px\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"rgba(140,147,150, 0.9)\",\r\n    },\r\n  },\r\n  typography: {\r\n    fontFamily: `\"Jua\", sans-serif`,\r\n    position: \"relative\",\r\n    right: \"20px\",\r\n    userSelect: \"none\",\r\n  },\r\n  homeLink: {\r\n    textDecoration: \"none\",\r\n    color: \"white\",\r\n  },\r\n  newBoard: {\r\n    display: \"none\",\r\n    position: \"fixed\",\r\n    top: 0,\r\n    left: 0,\r\n    width: \"100vw\",\r\n    height: \"100vh\",\r\n    zIndex: 1100,\r\n    backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n  },\r\n  addBoard: {\r\n    backgroundColor: \"rgb(235,236,240)\",\r\n    width: \"370px\",\r\n    height: \"200px\",\r\n    margin: \"auto\",\r\n    position: \"relative\",\r\n    top: \"230px\",\r\n  },\r\n  addBoardtitle: {\r\n    position: \"relative\",\r\n    top: \"25px\",\r\n    left: \"43px\",\r\n  },\r\n  addBoardInput: {\r\n    position: \"relative\",\r\n    top: \"50px\",\r\n    left: \"40px\",\r\n    fontSize: \"15px\",\r\n    outline: \"none\",\r\n    border: \"2px solid rgb(0,121,191)\",\r\n    borderRadius: \"5px\",\r\n    width: \"256px\",\r\n    height: \"17px\",\r\n    padding: \"10px 10px\",\r\n    resize: \"none\",\r\n    \"&::-webkit-scrollbar\": {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  addBoardBt: {\r\n    position: \"relative\",\r\n    top: \"60px\",\r\n    left: \"115px\",\r\n    outline: \"none\",\r\n    border: \"none\",\r\n    zIndex: 1200,\r\n    borderRadius: \"5px\",\r\n    backgroundColor: \"rgb(90,172,68)\",\r\n    marginTop: \"10px\",\r\n    color: \"white\",\r\n    padding: \"8px 16px\",\r\n    fontSize: \"15px\",\r\n    cursor: \"pointer\",\r\n  },\r\n  closeIcon: {\r\n    position: \"relative\",\r\n    top: \"-50px\",\r\n    left: \"180px\",\r\n    cursor: \"pointer\",\r\n    color: \"rgb(108,120,141)\",\r\n    fontSize: \"28px\",\r\n  },\r\n}));\r\n\r\nconst Navbar = () => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const classes = useStyles();\r\n\r\n  const { newBoardId } = useSelector<RootState, BoardState>(\r\n    (state: RootState) => state.trello\r\n  );\r\n\r\n  const [newBoard, setNewBoard] = useState(\"\");\r\n  const newBoardEl = useRef<HTMLDivElement>(null);\r\n\r\n  const onChangeBoard = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { value } = e.target;\r\n    setNewBoard(value);\r\n  };\r\n  const onClickNewBoard = () => {\r\n    if (newBoardEl.current) {\r\n      newBoardEl.current.style.display = \"block\";\r\n    }\r\n  };\r\n  const onClickAddBoard = () => {\r\n    if (newBoard !== \"\") {\r\n      onClickClose();\r\n      dispatch(addBoard(newBoard));\r\n      history.push(`/board/${newBoardId + 1}`);\r\n    }\r\n  };\r\n  const onClickClose = () => {\r\n    if (newBoardEl.current) {\r\n      newBoardEl.current.style.display = \"none\";\r\n    }\r\n    setNewBoard(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AppBar className={classes.appbar}>\r\n        <Toolbar className={classes.toolbar}>\r\n          <div className={classes.div}>\r\n            <Link to=\"/\" className={classes.homeLink}>\r\n              <IconButton className={classes.homeiconbutton} color=\"inherit\">\r\n                <HomeIcon />\r\n              </IconButton>\r\n            </Link>\r\n            <Link to=\"/\" className={classes.homeLink}>\r\n              <Button className={classes.button} color=\"inherit\">\r\n                Boards\r\n              </Button>\r\n            </Link>\r\n          </div>\r\n          <Typography className={classes.typography} variant=\"h6\">\r\n            Trello\r\n          </Typography>\r\n          <div className={classes.div}>\r\n            <IconButton className={classes.addiconbutton} color=\"inherit\">\r\n              <AddIcon onClick={onClickNewBoard} />\r\n            </IconButton>\r\n            <Avatar className={classes.avatar}>A</Avatar>\r\n          </div>\r\n          <div ref={newBoardEl} className={classes.newBoard}>\r\n            <Card className={classes.addBoard}>\r\n              <div>\r\n                <h3 className={classes.addBoardtitle}>New Board</h3>\r\n                <input\r\n                  className={classes.addBoardInput}\r\n                  placeholder=\"Input Board Name ...\"\r\n                  onChange={onChangeBoard}\r\n                  value={newBoard}\r\n                  maxLength={15}\r\n                />\r\n                <button\r\n                  className={classes.addBoardBt}\r\n                  onClick={onClickAddBoard}\r\n                >\r\n                  Create a Board\r\n                </button>\r\n                <CloseIcon\r\n                  className={classes.closeIcon}\r\n                  onClick={onClickClose}\r\n                />\r\n              </div>\r\n            </Card>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { RootState } from \"store/reducers\";\r\nimport { BoardState } from \"store/reducers/trello\";\r\n\r\nimport Navbar from \"components/Navbar\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  screen: {\r\n    maxWidth: \"98vw\",\r\n    maxHeight: \"90vh\",\r\n    position: \"relative\",\r\n    top: \"150px\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  boards: {\r\n    marginTop: \"10px\",\r\n    width: \"730px\",\r\n    height: \"150px\",\r\n    display: \"flex\",\r\n    flexFlow: \"nowrap\",\r\n    overflow: \"auto\",\r\n    \"&::-webkit-scrollbar\": {\r\n      height: \"11px\",\r\n    },\r\n    \"&::-webkit-scrollbar-thumb\": {\r\n      backgroundColor: \"rgb(191,196,206)\",\r\n      borderRadius: \"10px\",\r\n    },\r\n    \"&::-webkit-scrollbar-track\": {\r\n      backgroundColor: \"rgb(218,219,226)\",\r\n      borderRadius: \"10px\",\r\n    },\r\n  },\r\n  boardLink: {\r\n    position: \"relative\",\r\n    left: \"-7px\",\r\n    height: \"80px\",\r\n    textDecoration: \"none\",\r\n    color: \"black\",\r\n    fontSize: \"17px\",\r\n    margin: \"6px 8px\",\r\n    \"&:hover\": {\r\n      color: \"black\",\r\n    },\r\n  },\r\n  boardBox: {\r\n    borderRadius: \"3px\",\r\n    backgroundColor: \"white\",\r\n    minWidth: \"145px\",\r\n    maxWidth: \"145px\",\r\n    minHeight: \"80px\",\r\n    maxHeight: \"80px\",\r\n    padding: \"15px\",\r\n    transition: \"all 0.3s ease\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"rgb(231,233,237)\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst Trello = () => {\r\n  const classes = useStyles();\r\n\r\n  const { starCount, boards } = useSelector<RootState, BoardState>(\r\n    (state: RootState) => state.trello\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n\r\n      <div className={classes.screen}>\r\n        <div>\r\n          <h3>My Boards</h3>\r\n          <div className={classes.boards}>\r\n            {boards.map((v, i) => (\r\n              <Link key={i} to={`/board/${v.id}`} className={classes.boardLink}>\r\n                <div className={classes.boardBox}>{v.boardName}</div>\r\n              </Link>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        {starCount === 0 ? null : (\r\n          <div style={{ marginTop: \"30px\" }}>\r\n            <h3>Starred Boards</h3>\r\n            <div className={classes.boards}>\r\n              {boards.map((v, i) => {\r\n                if (v.star === true) {\r\n                  return (\r\n                    <Link\r\n                      key={i}\r\n                      to={`/board/${v.id}`}\r\n                      className={classes.boardLink}\r\n                    >\r\n                      <div className={classes.boardBox}>{v.boardName}</div>\r\n                    </Link>\r\n                  );\r\n                } else {\r\n                  return null;\r\n                }\r\n              })}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Trello;\r\n","import React from \"react\";\r\nimport { useEffect, useState, useRef } from \"react\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\nimport { editCard, deleteCard } from \"../store/actions/trello\";\r\n\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  list: {\r\n    minHeight: \"20px\",\r\n    position: \"relative\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    marginBottom: \"8px\",\r\n    padding: \"12px\",\r\n    cursor: \"pointer\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"rgb(244,245,247)\",\r\n    },\r\n  },\r\n  editIcon: {\r\n    color: \"rgb(131,140,145)\",\r\n    display: \"none\",\r\n    padding: \"10px\",\r\n    position: \"absolute\",\r\n    top: \"4px\",\r\n    right: \"4px\",\r\n    fontSize: \"16px\",\r\n    borderRadius: \"5px\",\r\n    \"&:hover\": {\r\n      color: \"black\",\r\n      backgroundColor: \"rgb(235,236,240)\",\r\n    },\r\n  },\r\n  editList: {\r\n    width: \"235px\",\r\n    minHeight: \"20px\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    marginBottom: \"8px\",\r\n    padding: \"12px\",\r\n    cursor: \"pointer\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"rgb(244,245,247)\",\r\n    },\r\n  },\r\n  editListform: {\r\n    display: \"none\",\r\n  },\r\n  editListInput: {\r\n    position: \"absolute\",\r\n    top: \"-12px\",\r\n    left: 0,\r\n    fontSize: \"16px\",\r\n    outline: \"none\",\r\n    border: \"none\",\r\n    borderRadius: \"5px\",\r\n    width: \"252px\",\r\n    height: \"60px\",\r\n    padding: \"12px 12px\",\r\n    marginTop: \"12px\",\r\n    resize: \"none\",\r\n    zIndex: 1200,\r\n    \"&::-webkit-scrollbar\": {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  editListBt: {\r\n    position: \"absolute\",\r\n    top: \"80px\",\r\n    left: \"0px\",\r\n    outline: \"none\",\r\n    border: \"none\",\r\n    zIndex: 1200,\r\n    borderRadius: \"5px\",\r\n    backgroundColor: \"rgb(90,172,68)\",\r\n    marginTop: \"10px\",\r\n    color: \"white\",\r\n    padding: \"8px 21px\",\r\n    fontSize: \"16px\",\r\n    cursor: \"pointer\",\r\n  },\r\n  deleteListBt: {\r\n    position: \"absolute\",\r\n    top: \"80px\",\r\n    left: \"85px\",\r\n    outline: \"none\",\r\n    border: \"none\",\r\n    zIndex: 1200,\r\n    borderRadius: \"5px\",\r\n    backgroundColor: \"rgb(250,60,84)\",\r\n    marginTop: \"10px\",\r\n    color: \"white\",\r\n    padding: \"8px 15px\",\r\n    fontSize: \"16px\",\r\n    cursor: \"pointer\",\r\n  },\r\n  closeIcon: {\r\n    position: \"absolute\",\r\n    top: \"93px\",\r\n    left: \"245px\",\r\n    cursor: \"pointer\",\r\n    color: \"black\",\r\n    fontSize: \"25px\",\r\n    zIndex: 1200,\r\n  },\r\n}));\r\n\r\ninterface Props {\r\n  list: string;\r\n  index: number;\r\n  listIndex: number;\r\n  boardId: number;\r\n}\r\n\r\nconst ListCard: React.FC<Props> = ({ list, index, listIndex, boardId }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const classes = useStyles();\r\n\r\n  const [editList, setEditList] = useState(list);\r\n  const editListEl = useRef<HTMLDivElement>(null);\r\n  const editBlack = useRef<HTMLDivElement>(null);\r\n  const editEl = useRef<SVGSVGElement>(null);\r\n  const paperEl = useRef<HTMLDivElement>(null);\r\n  const textareaEl = useRef<HTMLTextAreaElement>(null);\r\n\r\n  useEffect(() => {\r\n    setEditList(list);\r\n  }, [list]);\r\n\r\n  const onMouseOver = () => {\r\n    if (editEl.current) {\r\n      editEl.current.style.display = \"block\";\r\n    }\r\n  };\r\n  const onMouseOut = () => {\r\n    if (editEl.current) {\r\n      editEl.current.style.display = \"none\";\r\n    }\r\n  };\r\n  const onClickEditList = () => {\r\n    if (editListEl.current) {\r\n      editListEl.current.style.display = \"block\";\r\n    }\r\n    if (editBlack.current) {\r\n      editBlack.current.style.display = \"block\";\r\n    }\r\n    if (paperEl.current && textareaEl.current) {\r\n      textareaEl.current.style.width = `${paperEl.current.scrollWidth - 24}px`;\r\n    }\r\n  };\r\n  const onChangeEditList = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n    const { value } = e.target;\r\n    setEditList(value);\r\n  };\r\n  const onSubmitForm = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n  };\r\n  const onClickSave = () => {\r\n    if (editList !== \"\") {\r\n      if (editListEl.current) {\r\n        editListEl.current.style.display = \"none\";\r\n      }\r\n      if (editBlack.current) {\r\n        editBlack.current.style.display = \"none\";\r\n      }\r\n      dispatch(editCard(editList, index, listIndex, boardId));\r\n    }\r\n  };\r\n  const onClickDelete = () => {\r\n    if (editListEl.current) {\r\n      editListEl.current.style.display = \"none\";\r\n    }\r\n    if (editBlack.current) {\r\n      editBlack.current.style.display = \"none\";\r\n    }\r\n    dispatch(deleteCard(index, listIndex, boardId));\r\n  };\r\n  const onClickClose = () => {\r\n    if (editListEl.current) {\r\n      editListEl.current.style.display = \"none\";\r\n    }\r\n    if (editBlack.current) {\r\n      editBlack.current.style.display = \"none\";\r\n    }\r\n    setEditList(list);\r\n  };\r\n  const onClickEditBlack = () => {\r\n    if (editListEl.current) {\r\n      editListEl.current.style.display = \"none\";\r\n    }\r\n    if (editBlack.current) {\r\n      editBlack.current.style.display = \"none\";\r\n    }\r\n    setEditList(list);\r\n  };\r\n\r\n  return (\r\n    <div style={{ position: \"relative\" }}>\r\n      <Paper\r\n        ref={paperEl}\r\n        className={classes.list}\r\n        onMouseOver={onMouseOver}\r\n        onMouseOut={onMouseOut}\r\n      >\r\n        <p style={{ maxWidth: \"250px\", wordBreak: \"break-word\" }}>{list}</p>\r\n        <CreateIcon\r\n          ref={editEl}\r\n          className={classes.editIcon}\r\n          onClick={onClickEditList}\r\n        />\r\n      </Paper>\r\n      <div\r\n        ref={editBlack}\r\n        style={{\r\n          display: \"none\",\r\n          position: \"fixed\",\r\n          top: 0,\r\n          left: 0,\r\n          width: \"100vw\",\r\n          height: \"100vh\",\r\n          zIndex: 1100,\r\n          backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n        }}\r\n        onClick={onClickEditBlack}\r\n      ></div>\r\n      <div ref={editListEl} className={classes.editListform}>\r\n        <div style={{ height: \"82px\" }}></div>\r\n        <form onSubmit={onSubmitForm}>\r\n          <textarea\r\n            ref={textareaEl}\r\n            className={classes.editListInput}\r\n            placeholder=\"Input card ...\"\r\n            value={editList}\r\n            onChange={onChangeEditList}\r\n          />\r\n        </form>\r\n        <CloseIcon className={classes.closeIcon} onClick={onClickClose} />\r\n        <button className={classes.editListBt} onClick={onClickSave}>\r\n          Save\r\n        </button>\r\n        <button className={classes.deleteListBt} onClick={onClickDelete}>\r\n          Delete\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListCard;\r\n","import React from \"react\";\r\nimport { useEffect, useState, useRef } from \"react\";\r\nimport ListCard from \"components/ListCard\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  changeListTitle,\r\n  addCard,\r\n  copyList,\r\n  deleteList,\r\n} from \"../store/actions/trello\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  list: {\r\n    flexShrink: 0,\r\n    position: \"relative\",\r\n    backgroundColor: \"rgb(235,236,240)\",\r\n    width: \"300px\",\r\n    height: \"100%\",\r\n    margin: \"0 0 0 16px\",\r\n    overflow: \"visible\",\r\n  },\r\n  listName: {\r\n    margin: \"13px 10px\",\r\n    fontSize: \"18px\",\r\n    width: \"210px\",\r\n    height: \"1px\",\r\n    cursor: \"pointer\",\r\n  },\r\n  listNameForm: {\r\n    position: \"absolute\",\r\n    top: \"13px\",\r\n    left: \"12px\",\r\n  },\r\n  menuBt: {\r\n    fontSize: \"18px\",\r\n    position: \"absolute\",\r\n    top: \"15px\",\r\n    right: \"12px\",\r\n    fontWeight: \"bold\",\r\n    outline: \"none\",\r\n    border: \"none\",\r\n    cursor: \"pointer\",\r\n    borderRadius: \"50px\",\r\n    backgroundColor: \"rgb(235,236,240)\",\r\n  },\r\n  listNameInput: {\r\n    paddingTop: \"2px\",\r\n    paddingLeft: \"12px\",\r\n    fontSize: \"18px\",\r\n    outline: \"none\",\r\n    border: \"2px solid rgb(0,121,191)\",\r\n    borderRadius: \"5px\",\r\n    width: \"230px\",\r\n    height: \"25px\",\r\n    display: \"none\",\r\n  },\r\n  addBt: {\r\n    width: \"100%\",\r\n    textTransform: \"none\",\r\n  },\r\n  addBtText: {\r\n    display: \"none\",\r\n    position: \"relative\",\r\n    top: \"-8px\",\r\n    left: \"-4px\",\r\n  },\r\n  addCardInput: {\r\n    boxShadow:\r\n      \"0px 2px 1px -1px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 1px 3px 0px rgba(0,0,0,0.12)\",\r\n    fontSize: \"15px\",\r\n    outline: \"none\",\r\n    border: \"none\",\r\n    borderRadius: \"5px\",\r\n    width: \"256px\",\r\n    height: \"60px\",\r\n    padding: \"10px 10px\",\r\n    marginTop: \"12px\",\r\n    resize: \"none\",\r\n    \"&::-webkit-scrollbar\": {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  addCardBt: {\r\n    borderRadius: \"5px\",\r\n    outline: \"none\",\r\n    border: \"none\",\r\n    backgroundColor: \"rgb(90,172,68)\",\r\n    marginTop: \"10px\",\r\n    color: \"white\",\r\n    padding: \"6px 10px\",\r\n    fontSize: \"16px\",\r\n    cursor: \"pointer\",\r\n  },\r\n  closeIcon: {\r\n    position: \"relative\",\r\n    top: \"7px\",\r\n    left: \"8px\",\r\n    cursor: \"pointer\",\r\n    color: \"rgb(108,120,141)\",\r\n    fontSize: \"25px\",\r\n  },\r\n  cardContent: {\r\n    padding: \"0 12px\",\r\n    overflow: \"auto\",\r\n    maxHeight: \"375px\",\r\n    \"&::-webkit-scrollbar\": {\r\n      width: \"8px\",\r\n    },\r\n    \"&::-webkit-scrollbar-thumb\": {\r\n      backgroundColor: \"rgb(191,196,206)\",\r\n      borderRadius: \"10px\",\r\n    },\r\n    \"&::-webkit-scrollbar-track\": {\r\n      backgroundColor: \"rgb(218,219,226)\",\r\n      borderRadius: \"10px\",\r\n    },\r\n  },\r\n  listAc: {\r\n    zIndex: 100,\r\n    position: \"absolute\",\r\n    top: \"13px\",\r\n    right: \"-160px\",\r\n    width: \"200px\",\r\n    height: \"165px\",\r\n    border: \"1px solid rgb(218,219,226)\",\r\n    display: \"none\",\r\n  },\r\n  listAcTitle: {\r\n    fontFamily: `\"Jua\", sans-serif`,\r\n    position: \"relative\",\r\n    top: \"8px\",\r\n    textAlign: \"center\",\r\n  },\r\n  listAcClose: {\r\n    position: \"absolute\",\r\n    top: \"12px\",\r\n    right: \"9px\",\r\n    fontSize: \"17px\",\r\n    cursor: \"pointer\",\r\n  },\r\n  listAcBack: {\r\n    position: \"absolute\",\r\n    top: \"12px\",\r\n    left: \"9px\",\r\n    fontSize: \"15px\",\r\n    cursor: \"pointer\",\r\n    zIndex: 1,\r\n  },\r\n  listAcHr: {\r\n    position: \"relative\",\r\n    top: \"10px\",\r\n    width: \"170px\",\r\n    margin: \"auto\",\r\n    border: \"1px solid rgb(218,219,226)\",\r\n    backgroundColor: \"rgb(218,219,226)\",\r\n  },\r\n  listAcdivBt: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    marginTop: \"15px\",\r\n  },\r\n  listAcBt: {\r\n    width: \"179px\",\r\n  },\r\n  listAcdiv: {\r\n    margin: \"20px 15px\",\r\n  },\r\n  listAcaddListInput: {\r\n    fontSize: \"15px\",\r\n    outline: \"none\",\r\n    border: \"2px solid rgb(0,121,191)\",\r\n    borderRadius: \"5px\",\r\n    width: \"145px\",\r\n    height: \"12px\",\r\n    padding: \"10px 10px\",\r\n    margin: \"8px 0px\",\r\n    resize: \"none\",\r\n    \"&::-webkit-scrollbar\": {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  listAcaddListBt: {\r\n    borderRadius: \"5px\",\r\n    outline: \"none\",\r\n    border: \"none\",\r\n    backgroundColor: \"rgb(90,172,68)\",\r\n    color: \"white\",\r\n    padding: \"6px 8px\",\r\n    fontSize: \"15px\",\r\n    cursor: \"pointer\",\r\n  },\r\n  listAcDeleteListBt: {\r\n    margin: \"0 47px\",\r\n    borderRadius: \"5px\",\r\n    outline: \"none\",\r\n    border: \"none\",\r\n    backgroundColor: \"rgb(250,60,84)\",\r\n    color: \"white\",\r\n    padding: \"6px 16px\",\r\n    fontSize: \"15px\",\r\n    cursor: \"pointer\",\r\n  },\r\n}));\r\n\r\ninterface Props {\r\n  title: string;\r\n  list: string[];\r\n  index: number;\r\n  boardId: number;\r\n}\r\n\r\nconst List: React.FC<Props> = ({ title, list, index, boardId }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const classes = useStyles();\r\n\r\n  const [textTitle, setTextTitle] = useState(title);\r\n  const [card, setCard] = useState(\"\");\r\n  const [newList, setNewList] = useState(\"\");\r\n  const cardAdd = useRef<HTMLButtonElement>(null);\r\n  const textInput = useRef<HTMLInputElement>(null);\r\n  const cardInput = useRef<HTMLInputElement>(null);\r\n  const listAcEl = useRef<HTMLDivElement>(null);\r\n  const listAcCpEl = useRef<HTMLDivElement>(null);\r\n  const listAcDlEl = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    setTextTitle(title);\r\n  }, [title]);\r\n\r\n  const onChangeInput = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { value } = e.target;\r\n    setTextTitle(value);\r\n  };\r\n  const onClickName = () => {\r\n    if (textInput.current) {\r\n      textInput.current.style.display = \"block\";\r\n    }\r\n  };\r\n  const onSubmitForm = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    if (textInput.current) {\r\n      textInput.current.style.display = \"none\";\r\n    }\r\n    dispatch(changeListTitle(textTitle, index, boardId));\r\n  };\r\n  const onBlurInput = () => {\r\n    if (textTitle !== \"\") {\r\n      if (textInput.current) {\r\n        textInput.current.style.display = \"none\";\r\n      }\r\n      dispatch(changeListTitle(textTitle, index, boardId));\r\n    }\r\n  };\r\n  const onClickAddBt = () => {\r\n    if (cardInput.current) {\r\n      cardInput.current.style.display = \"block\";\r\n    }\r\n    if (cardAdd.current) {\r\n      cardAdd.current.style.display = \"none\";\r\n    }\r\n  };\r\n  const onClickAddCard = () => {\r\n    if (card !== \"\") {\r\n      dispatch(addCard(card, index, boardId));\r\n      setCard(\"\");\r\n    }\r\n  };\r\n  const onChangeCard = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n    const { value } = e.target;\r\n    setCard(value);\r\n  };\r\n  const onClickClose = () => {\r\n    if (cardInput.current) {\r\n      cardInput.current.style.display = \"none\";\r\n    }\r\n    if (cardAdd.current) {\r\n      cardAdd.current.style.display = \"block\";\r\n    }\r\n  };\r\n\r\n  const onClickListAc = () => {\r\n    if (listAcEl.current) {\r\n      listAcEl.current.style.display = \"block\";\r\n    }\r\n  };\r\n  const onClickListAcClose = () => {\r\n    if (listAcEl.current && listAcCpEl.current && listAcDlEl.current) {\r\n      listAcEl.current.style.display = \"none\";\r\n      listAcCpEl.current.style.display = \"none\";\r\n      listAcDlEl.current.style.display = \"none\";\r\n    }\r\n    setNewList(\"\");\r\n  };\r\n  const onClickListAcAddCard = () => {\r\n    onClickListAcClose();\r\n    onClickAddBt();\r\n  };\r\n  const onClickListAcCopy = () => {\r\n    if (listAcEl.current && listAcCpEl.current) {\r\n      listAcEl.current.style.display = \"none\";\r\n      listAcCpEl.current.style.display = \"block\";\r\n    }\r\n  };\r\n  const onClickListAcDelete = () => {\r\n    if (listAcEl.current && listAcDlEl.current) {\r\n      listAcEl.current.style.display = \"none\";\r\n      listAcDlEl.current.style.display = \"block\";\r\n    }\r\n  };\r\n  const onChangeList = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { value } = e.target;\r\n    setNewList(value);\r\n  };\r\n  const onClickAddList = () => {\r\n    if (newList !== \"\") {\r\n      onClickListAcClose();\r\n      dispatch(copyList(newList, index, boardId));\r\n      setNewList(\"\");\r\n    }\r\n  };\r\n  const onClickDeleteList = () => {\r\n    onClickListAcClose();\r\n    dispatch(deleteList(index, boardId));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card className={classes.list}>\r\n        <CardHeader\r\n          className={classes.listName}\r\n          title={title}\r\n          onClick={onClickName}\r\n          disableTypography\r\n        />\r\n        <form className={classes.listNameForm} onSubmit={onSubmitForm}>\r\n          <input\r\n            ref={textInput}\r\n            className={classes.listNameInput}\r\n            value={textTitle}\r\n            onChange={onChangeInput}\r\n            required\r\n            onBlur={onBlurInput}\r\n            maxLength={15}\r\n          />\r\n        </form>\r\n        <button className={classes.menuBt} onClick={onClickListAc}>\r\n          ⋯\r\n        </button>\r\n        <div onMouseLeave={onClickListAcClose}>\r\n          <Paper ref={listAcEl} className={classes.listAc}>\r\n            <Typography className={classes.listAcTitle} variant=\"subtitle1\">\r\n              List Actions\r\n            </Typography>\r\n            <CloseIcon\r\n              className={classes.listAcClose}\r\n              onClick={onClickListAcClose}\r\n            />\r\n            <hr className={classes.listAcHr} />\r\n            <div className={classes.listAcdivBt}>\r\n              <Button\r\n                className={classes.listAcBt}\r\n                onClick={onClickListAcAddCard}\r\n                disableRipple\r\n              >\r\n                Add Card\r\n              </Button>\r\n              <Button\r\n                className={classes.listAcBt}\r\n                onClick={onClickListAcCopy}\r\n                disableRipple\r\n              >\r\n                Copy List\r\n              </Button>\r\n              <Button\r\n                className={classes.listAcBt}\r\n                onClick={onClickListAcDelete}\r\n                disableRipple\r\n              >\r\n                Delete This List\r\n              </Button>\r\n            </div>\r\n          </Paper>\r\n          <Paper\r\n            ref={listAcCpEl}\r\n            className={classes.listAc}\r\n            onMouseLeave={onClickListAcClose}\r\n          >\r\n            <Typography className={classes.listAcTitle} variant=\"subtitle1\">\r\n              Copy List\r\n            </Typography>\r\n            <CloseIcon\r\n              className={classes.listAcClose}\r\n              onClick={onClickListAcClose}\r\n            />\r\n            <hr className={classes.listAcHr} />\r\n            <div className={classes.listAcdiv}>\r\n              <p>Name</p>\r\n              <input\r\n                className={classes.listAcaddListInput}\r\n                placeholder=\"Input List title ...\"\r\n                onChange={onChangeList}\r\n                value={newList}\r\n                maxLength={15}\r\n              />\r\n              <button\r\n                className={classes.listAcaddListBt}\r\n                onClick={onClickAddList}\r\n              >\r\n                Create\r\n              </button>\r\n            </div>\r\n          </Paper>\r\n          <Paper\r\n            ref={listAcDlEl}\r\n            className={classes.listAc}\r\n            onMouseLeave={onClickListAcClose}\r\n          >\r\n            <Typography className={classes.listAcTitle} variant=\"subtitle1\">\r\n              Delete List\r\n            </Typography>\r\n            <CloseIcon\r\n              className={classes.listAcClose}\r\n              onClick={onClickListAcClose}\r\n            />\r\n            <hr className={classes.listAcHr} />\r\n            <div className={classes.listAcdiv}>\r\n              <p style={{ margin: \"35px 0 20px 0\" }}>\r\n                삭제 후 되돌릴 수 없습니다.\r\n              </p>\r\n              <button\r\n                className={classes.listAcDeleteListBt}\r\n                onClick={onClickDeleteList}\r\n              >\r\n                Delete\r\n              </button>\r\n            </div>\r\n          </Paper>\r\n        </div>\r\n        <CardContent className={classes.cardContent}>\r\n          {list.map((v, i) => (\r\n            <ListCard\r\n              key={i}\r\n              list={v}\r\n              index={i}\r\n              listIndex={index}\r\n              boardId={boardId}\r\n            />\r\n          ))}\r\n        </CardContent>\r\n        <CardActions>\r\n          <Button\r\n            ref={cardAdd}\r\n            className={classes.addBt}\r\n            onClick={onClickAddBt}\r\n            disableRipple\r\n          >\r\n            + Add a Card\r\n          </Button>\r\n          <div ref={cardInput} className={classes.addBtText}>\r\n            <textarea\r\n              className={classes.addCardInput}\r\n              placeholder=\"Input card ...\"\r\n              onChange={onChangeCard}\r\n              value={card}\r\n            />\r\n            <button className={classes.addCardBt} onClick={onClickAddCard}>\r\n              Add Card\r\n            </button>\r\n            <CloseIcon className={classes.closeIcon} onClick={onClickClose} />\r\n          </div>\r\n        </CardActions>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import React from \"react\";\r\nimport { useState, useRef, useEffect } from \"react\";\r\nimport { RootState } from \"store/reducers\";\r\nimport { BoardState, ListType } from \"store/reducers/trello\";\r\nimport { useRouteMatch, useHistory } from \"react-router\";\r\nimport List from \"components/List\";\r\nimport Navbar from \"components/Navbar\";\r\nimport \"app.css\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  changeBoardName,\r\n  starBoard,\r\n  deleteBoard,\r\n  addList,\r\n} from \"../store/actions/trello\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  screen: {\r\n    maxWidth: \"98vw\",\r\n    maxHeight: \"90vh\",\r\n    position: \"relative\",\r\n    top: \"58px\",\r\n    left: \"1vw\",\r\n  },\r\n  boardName: {\r\n    display: \"flex\",\r\n    marginBottom: \"12px\",\r\n  },\r\n  boardNameText: {\r\n    position: \"absolute\",\r\n    top: 0,\r\n    left: \"60px\",\r\n    padding: \"4px 12px 2px 12px\",\r\n    flex: \"0 1 auto\",\r\n    color: \"white\",\r\n    borderRadius: \"5px\",\r\n    fontFamily: `\"Jua\", sans-serif`,\r\n    cursor: \"pointer\",\r\n    fontSize: \"18px\",\r\n    whiteSpace: \"pre\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"rgba(154,160,163, 0.9)\",\r\n    },\r\n  },\r\n  boardNameForm: {\r\n    position: \"absolute\",\r\n    top: 0,\r\n    left: \"60px\",\r\n  },\r\n  boardNameInput: {\r\n    padding: \"0 12px\",\r\n    outline: \"none\",\r\n    border: \"none\",\r\n    borderRadius: \"5px\",\r\n    height: \"34px\",\r\n    fontSize: \"18px\",\r\n    whiteSpace: \"pre\",\r\n  },\r\n  starBt: {\r\n    margin: \"0 16px\",\r\n    backgroundColor: \"rgba(154,160,163, 0.9)\",\r\n    width: \"35px\",\r\n    height: \"35px\",\r\n    textTransform: \"none\",\r\n    outline: \"none\",\r\n    border: \"none\",\r\n    borderRadius: \"5px\",\r\n    fontWeight: \"bold\",\r\n    cursor: \"pointer\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"rgba(171,177,180, 0.9)\",\r\n    },\r\n  },\r\n  deleteBt: {\r\n    position: \"absolute\",\r\n    right: \"20px\",\r\n    backgroundColor: \"rgba(154,160,163, 0.9)\",\r\n    width: \"35px\",\r\n    height: \"35px\",\r\n    textTransform: \"none\",\r\n    outline: \"none\",\r\n    border: \"none\",\r\n    borderRadius: \"5px\",\r\n    fontWeight: \"bold\",\r\n    cursor: \"pointer\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"rgba(171,177,180, 0.9)\",\r\n    },\r\n  },\r\n  addBt: {\r\n    margin: \"0 32px 0 16px\",\r\n    flexShrink: 0,\r\n    width: \"300px\",\r\n    height: \"40px\",\r\n    textTransform: \"none\",\r\n    backgroundColor: \"rgb(161,168,171)\",\r\n    color: \"white\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"rgba(171,177,180, 0.9)\",\r\n    },\r\n  },\r\n  addList: {\r\n    flexShrink: 0,\r\n    position: \"absolute\",\r\n    top: 0,\r\n    left: 0,\r\n    backgroundColor: \"rgb(235,236,240)\",\r\n    width: \"300px\",\r\n    height: \"115px\",\r\n    margin: \"0 0 0 16px\",\r\n    display: \"none\",\r\n  },\r\n  addBtText: {},\r\n  addListInput: {\r\n    fontSize: \"15px\",\r\n    outline: \"none\",\r\n    border: \"2px solid rgb(0,121,191)\",\r\n    borderRadius: \"5px\",\r\n    width: \"256px\",\r\n    height: \"17px\",\r\n    padding: \"10px 10px\",\r\n    margin: \"12px 9px\",\r\n    resize: \"none\",\r\n    \"&::-webkit-scrollbar\": {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  addListBt: {\r\n    position: \"absolute\",\r\n    top: \"55px\",\r\n    left: \"10px\",\r\n    outline: \"none\",\r\n    border: \"none\",\r\n    zIndex: 1200,\r\n    borderRadius: \"5px\",\r\n    backgroundColor: \"rgb(90,172,68)\",\r\n    marginTop: \"10px\",\r\n    color: \"white\",\r\n    padding: \"8px 16px\",\r\n    fontSize: \"14px\",\r\n    cursor: \"pointer\",\r\n  },\r\n  closeIcon: {\r\n    position: \"relative\",\r\n    top: \"4px\",\r\n    left: \"100px\",\r\n    cursor: \"pointer\",\r\n    color: \"rgb(108,120,141)\",\r\n    fontSize: \"25px\",\r\n  },\r\n\r\n  deleteBoardbox: {\r\n    display: \"none\",\r\n    position: \"fixed\",\r\n    top: 0,\r\n    left: 0,\r\n    width: \"100vw\",\r\n    height: \"100vh\",\r\n    zIndex: 1100,\r\n    backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n  },\r\n  deleteBoard: {\r\n    backgroundColor: \"rgb(235,236,240)\",\r\n    width: \"370px\",\r\n    height: \"200px\",\r\n    margin: \"auto\",\r\n    position: \"relative\",\r\n    top: \"230px\",\r\n  },\r\n  deleteBoardtitle: {\r\n    position: \"relative\",\r\n    top: \"25px\",\r\n    left: \"43px\",\r\n  },\r\n  deleteBoarddesc: {\r\n    position: \"relative\",\r\n    top: \"50px\",\r\n    left: \"83px\",\r\n    fontSize: \"20px\",\r\n    color: \"black\",\r\n  },\r\n  deleteBoardBt: {\r\n    position: \"relative\",\r\n    top: \"70px\",\r\n    left: \"110px\",\r\n    outline: \"none\",\r\n    border: \"none\",\r\n    zIndex: 1200,\r\n    borderRadius: \"5px\",\r\n    backgroundColor: \"rgb(250,60,84)\",\r\n    marginTop: \"10px\",\r\n    color: \"white\",\r\n    padding: \"8px 16px\",\r\n    fontSize: \"15px\",\r\n    cursor: \"pointer\",\r\n  },\r\n  closeIconDeleteBoard: {\r\n    position: \"relative\",\r\n    top: \"-35px\",\r\n    left: \"165px\",\r\n    cursor: \"pointer\",\r\n    color: \"rgb(108,120,141)\",\r\n    fontSize: \"28px\",\r\n  },\r\n}));\r\n\r\nconst Board = () => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const match = useRouteMatch<{ boardId: string }>();\r\n  const boardId = Number(match.params.boardId);\r\n\r\n  const classes = useStyles();\r\n\r\n  const { boards } = useSelector<RootState, BoardState>(\r\n    (state: RootState) => state.trello\r\n  );\r\n  let lists: ListType = [];\r\n  let firstBoardName: string = \"\";\r\n  let boardStar: boolean = false;\r\n  boards.forEach((v, i) => {\r\n    if (v.id === boardId) {\r\n      lists = boards[i].lists;\r\n      firstBoardName = boards[i].boardName;\r\n      boardStar = boards[i].star;\r\n    }\r\n  });\r\n\r\n  const [boardName, setBoardName] = useState(firstBoardName);\r\n  const [textInput, setTextInput] = useState(\"invisible\");\r\n  const [newList, setNewList] = useState(\"\");\r\n\r\n  const bnEl = useRef<HTMLInputElement>(null);\r\n  const wtEl = useRef<HTMLInputElement>(null);\r\n  const stEl = useRef<HTMLButtonElement>(null);\r\n  const addListEl = useRef<HTMLDivElement>(null);\r\n  const deleteBoardEl = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    setBoardName(firstBoardName);\r\n  }, [firstBoardName]);\r\n\r\n  const onClickText = () => {\r\n    setTextInput(\"\");\r\n    if (bnEl.current && wtEl.current) {\r\n      bnEl.current.style.width = wtEl.current.scrollWidth - 24 + \"px\";\r\n    }\r\n  };\r\n  const onBlurInput = () => {\r\n    dispatch(changeBoardName(boardName, boardId));\r\n    setTextInput(\"invisible\");\r\n    if (boardName === \"\") {\r\n      setBoardName(\"Board Name\");\r\n      dispatch(changeBoardName(\"Board Name\", boardId));\r\n    }\r\n  };\r\n  const onSubmitForm = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    dispatch(changeBoardName(boardName, boardId));\r\n    setTextInput(\"invisible\");\r\n  };\r\n  const onChangeName = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { value } = e.target;\r\n    setBoardName(value);\r\n\r\n    if (bnEl.current && wtEl.current) {\r\n      bnEl.current.style.width = wtEl.current.scrollWidth - 8 + \"px\";\r\n    }\r\n  };\r\n  const onClickStar = () => {\r\n    dispatch(starBoard(boardId));\r\n  };\r\n  const onClickDeleteBt = () => {\r\n    if (deleteBoardEl.current) {\r\n      deleteBoardEl.current.style.display = \"block\";\r\n    }\r\n  };\r\n  const onClickDeleteBoard = () => {\r\n    onClickCloseDeleteBoard();\r\n    dispatch(deleteBoard(boardId));\r\n    history.push(\"/\");\r\n  };\r\n  const onClickCloseDeleteBoard = () => {\r\n    if (deleteBoardEl.current) {\r\n      deleteBoardEl.current.style.display = \"none\";\r\n    }\r\n  };\r\n\r\n  const onClickAddListBt = () => {\r\n    if (addListEl.current) {\r\n      addListEl.current.style.display = \"block\";\r\n    }\r\n  };\r\n  const onChangeList = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { value } = e.target;\r\n    setNewList(value);\r\n  };\r\n  const onClickAddList = () => {\r\n    if (newList !== \"\") {\r\n      if (addListEl.current) {\r\n        addListEl.current.style.display = \"none\";\r\n      }\r\n      dispatch(addList(newList, boardId));\r\n      setNewList(\"\");\r\n    }\r\n  };\r\n  const onClickClose = () => {\r\n    if (addListEl.current) {\r\n      addListEl.current.style.display = \"none\";\r\n    }\r\n    setNewList(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <div className={classes.screen}>\r\n        <div className={classes.boardName}>\r\n          {boardStar ? (\r\n            <button\r\n              ref={stEl}\r\n              style={{ color: \"yellow\" }}\r\n              className={classes.starBt}\r\n              onClick={onClickStar}\r\n            >\r\n              ☆\r\n            </button>\r\n          ) : (\r\n            <button\r\n              ref={stEl}\r\n              style={{ color: \"white\" }}\r\n              className={classes.starBt}\r\n              onClick={onClickStar}\r\n            >\r\n              ☆\r\n            </button>\r\n          )}\r\n          <Typography\r\n            ref={wtEl}\r\n            className={classes.boardNameText}\r\n            variant=\"h6\"\r\n            onClick={onClickText}\r\n          >\r\n            {boardName}\r\n          </Typography>\r\n          <button className={classes.deleteBt} onClick={onClickDeleteBt}>\r\n            <DeleteOutlineIcon style={{ fontSize: \"20px\", color: \"white\" }} />\r\n          </button>\r\n          <div ref={deleteBoardEl} className={classes.deleteBoardbox}>\r\n            <Card className={classes.deleteBoard}>\r\n              <div>\r\n                <h3 className={classes.deleteBoardtitle}>Delete Board</h3>\r\n                <p className={classes.deleteBoarddesc}>\r\n                  삭제 후 되돌릴 수 없습니다.\r\n                </p>\r\n                <button\r\n                  className={classes.deleteBoardBt}\r\n                  onClick={onClickDeleteBoard}\r\n                >\r\n                  Delete This Board\r\n                </button>\r\n                <CloseIcon\r\n                  className={classes.closeIconDeleteBoard}\r\n                  onClick={onClickCloseDeleteBoard}\r\n                />\r\n              </div>\r\n            </Card>\r\n          </div>\r\n          <form className={classes.boardNameForm} onSubmit={onSubmitForm}>\r\n            <input\r\n              ref={bnEl}\r\n              id={textInput}\r\n              className={classes.boardNameInput}\r\n              value={boardName}\r\n              onChange={onChangeName}\r\n              required\r\n              onBlur={onBlurInput}\r\n              maxLength={15}\r\n            />\r\n          </form>\r\n        </div>\r\n        <div style={{ display: \"flex\" }}>\r\n          {lists === undefined ? null : (\r\n            <>\r\n              {lists.map((v: { title: string; cards: string[] }, i: number) => (\r\n                <List\r\n                  key={i}\r\n                  title={v.title}\r\n                  list={v.cards}\r\n                  index={i}\r\n                  boardId={boardId}\r\n                />\r\n              ))}\r\n            </>\r\n          )}\r\n          <div style={{ position: \"relative\" }}>\r\n            <Button\r\n              className={classes.addBt}\r\n              onClick={onClickAddListBt}\r\n              disableRipple\r\n            >\r\n              <div style={{ position: \"absolute\", left: \"20px\" }}>\r\n                + Add a List\r\n              </div>\r\n            </Button>\r\n\r\n            <Card ref={addListEl} className={classes.addList}>\r\n              <div className={classes.addBtText}>\r\n                <input\r\n                  className={classes.addListInput}\r\n                  placeholder=\"Input List title ...\"\r\n                  onChange={onChangeList}\r\n                  value={newList}\r\n                  maxLength={15}\r\n                />\r\n                <button className={classes.addListBt} onClick={onClickAddList}>\r\n                  Add List\r\n                </button>\r\n                <CloseIcon\r\n                  className={classes.closeIcon}\r\n                  onClick={onClickClose}\r\n                />\r\n              </div>\r\n            </Card>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n","import React from \"react\";\nimport Trello from \"components/Trello\";\nimport Board from \"components/Board\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport \"app.css\";\n\nconst App = () => {\n  return (\n    <>\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <Switch>\n          <Route exact path=\"/\" component={Trello} />\n          <Route exact path=\"/board/:boardId\" component={Board} />\n        </Switch>\n      </BrowserRouter>\n    </>\n  );\n};\n\nexport default App;\n","import {\r\n  CHANGE_BOARD_NAME,\r\n  ADD_BOARD,\r\n  STAR_BOARD,\r\n  DELETE_BOARD,\r\n  CHANGE_LIST_TITLE,\r\n  ADD_LIST,\r\n  COPY_LIST,\r\n  DELETE_LIST,\r\n  ADD_CARD,\r\n  EDIT_CARD,\r\n  DELETE_CARD,\r\n} from \"../actions/types\";\r\nimport {\r\n  ChangeBoardNameAction,\r\n  AddBoardAction,\r\n  StarBoardAction,\r\n  DeleteBoardAction,\r\n  ChangeListTitleAction,\r\n  AddListAction,\r\n  CopyListAction,\r\n  DeleteListAction,\r\n  AddCardAction,\r\n  EditCardAction,\r\n  DeleteCardAction,\r\n} from \"../actions/trello\";\r\n\r\nexport type ListType = { title: string; cards: string[] }[];\r\nexport type BoardType = {\r\n  id: number;\r\n  star: boolean;\r\n  boardName: string;\r\n  lists: ListType;\r\n};\r\n\r\nexport interface BoardState {\r\n  newBoardId: number;\r\n  starCount: number;\r\n  boards: BoardType[];\r\n}\r\n\r\nconst initialState: BoardState = {\r\n  newBoardId: 2,\r\n  starCount: 1,\r\n  boards: [\r\n    {\r\n      id: 1,\r\n      star: true,\r\n      boardName: \"first board\",\r\n      lists: [\r\n        { title: \"To do\", cards: [\"doing\", \"test a game\", \"post\", \"hello\"] },\r\n        {\r\n          title: \"Doing\",\r\n          cards: [\"go to school\", \"watch\"],\r\n        },\r\n        { title: \"Complete\", cards: [\"pratice\", \"finish\", \"complete\"] },\r\n      ],\r\n    },\r\n    {\r\n      id: 2,\r\n      star: false,\r\n      boardName: \"second board\",\r\n      lists: [\r\n        { title: \"To do\", cards: [\"wow\", \"my second board\", \"front\"] },\r\n        {\r\n          title: \"Doing\",\r\n          cards: [\"buy coffee\", \"movie\", \"go to park\", \"learn math\"],\r\n        },\r\n        { title: \"Complete\", cards: [\"go to the gym\", \"computer\"] },\r\n      ],\r\n    },\r\n  ],\r\n};\r\n\r\ntype ListReducerActions =\r\n  | ChangeBoardNameAction\r\n  | AddBoardAction\r\n  | StarBoardAction\r\n  | DeleteBoardAction\r\n  | ChangeListTitleAction\r\n  | AddListAction\r\n  | CopyListAction\r\n  | DeleteListAction\r\n  | AddCardAction\r\n  | EditCardAction\r\n  | DeleteCardAction;\r\nconst BoardReducer = (state = initialState, action: ListReducerActions) => {\r\n  switch (action.type) {\r\n    case CHANGE_BOARD_NAME: {\r\n      const newBoard: BoardType[] = [...state.boards];\r\n      let i = 0;\r\n      while (i < newBoard.length) {\r\n        if (newBoard[i].id === action.boardId) {\r\n          newBoard[i].boardName = action.newBoardName;\r\n          break;\r\n        }\r\n        i = i + 1;\r\n      }\r\n      return { ...state, boards: [...newBoard] };\r\n    }\r\n    case ADD_BOARD: {\r\n      const newBoard: BoardType[] = [\r\n        ...state.boards,\r\n        {\r\n          id: state.newBoardId + 1,\r\n          star: false,\r\n          boardName: action.newBoardName,\r\n          lists: [\r\n            { title: \"To do\", cards: [] },\r\n            {\r\n              title: \"Doing\",\r\n              cards: [],\r\n            },\r\n            { title: \"Complete\", cards: [] },\r\n          ],\r\n        },\r\n      ];\r\n      return {\r\n        ...state,\r\n        boards: [...newBoard],\r\n        newBoardId: state.newBoardId + 1,\r\n      };\r\n    }\r\n    case STAR_BOARD: {\r\n      const newBoard: BoardType[] = [...state.boards];\r\n      let count = 0;\r\n      let i = 0;\r\n      while (i < newBoard.length) {\r\n        if (newBoard[i].id === action.boardId) {\r\n          newBoard[i].star = !newBoard[i].star;\r\n        }\r\n        if (newBoard[i].star === true) {\r\n          count = count + 1;\r\n        }\r\n        i = i + 1;\r\n      }\r\n      return { ...state, boards: [...newBoard], starCount: count };\r\n    }\r\n    case DELETE_BOARD: {\r\n      const newBoard: BoardType[] = [...state.boards];\r\n      let count = state.starCount;\r\n      let i = 0;\r\n      while (i < newBoard.length) {\r\n        if (newBoard[i].id === action.boardId) {\r\n          if (newBoard[i].star === true) {\r\n            count = count - 1;\r\n          }\r\n          newBoard.splice(i, 1);\r\n        }\r\n        i = i + 1;\r\n      }\r\n      return { ...state, boards: [...newBoard], starCount: count };\r\n    }\r\n    case CHANGE_LIST_TITLE: {\r\n      const newBoard: BoardType[] = [...state.boards];\r\n      let i = 0;\r\n      while (i < newBoard.length) {\r\n        if (newBoard[i].id === action.boardId) {\r\n          newBoard[i].lists[action.index].title = action.newTitle;\r\n          break;\r\n        }\r\n        i = i + 1;\r\n      }\r\n      return { ...state, boards: [...newBoard] };\r\n    }\r\n    case ADD_LIST: {\r\n      const newBoard: BoardType[] = [...state.boards];\r\n      let i = 0;\r\n      while (i < newBoard.length) {\r\n        if (newBoard[i].id === action.boardId) {\r\n          newBoard[i].lists = [\r\n            ...newBoard[i].lists,\r\n            { title: action.title, cards: [] },\r\n          ];\r\n          break;\r\n        }\r\n        i = i + 1;\r\n      }\r\n      return { ...state, boards: [...newBoard] };\r\n    }\r\n    case COPY_LIST: {\r\n      const newBoard: BoardType[] = [...state.boards];\r\n      let i = 0;\r\n      while (i < newBoard.length) {\r\n        if (newBoard[i].id === action.boardId) {\r\n          newBoard[i].lists.splice(action.index + 1, 0, {\r\n            title: action.title,\r\n            cards: [...newBoard[i].lists[action.index].cards],\r\n          });\r\n          break;\r\n        }\r\n        i = i + 1;\r\n      }\r\n      return { ...state, boards: [...newBoard] };\r\n    }\r\n    case DELETE_LIST: {\r\n      const newBoard: BoardType[] = [...state.boards];\r\n      let i = 0;\r\n      while (i < newBoard.length) {\r\n        if (newBoard[i].id === action.boardId) {\r\n          newBoard[i].lists.splice(action.index, 1);\r\n          break;\r\n        }\r\n        i = i + 1;\r\n      }\r\n      return { ...state, boards: [...newBoard] };\r\n    }\r\n    case ADD_CARD: {\r\n      const newBoard: BoardType[] = [...state.boards];\r\n      let i = 0;\r\n      while (i < newBoard.length) {\r\n        if (newBoard[i].id === action.boardId) {\r\n          newBoard[i].lists[action.index].cards = [\r\n            ...newBoard[i].lists[action.index].cards,\r\n            action.card,\r\n          ];\r\n          break;\r\n        }\r\n        i = i + 1;\r\n      }\r\n      return { ...state, boards: [...newBoard] };\r\n    }\r\n    case EDIT_CARD: {\r\n      const newBoard: BoardType[] = [...state.boards];\r\n      let i = 0;\r\n      while (i < newBoard.length) {\r\n        if (newBoard[i].id === action.boardId) {\r\n          newBoard[i].lists[action.listIndex].cards[action.index] =\r\n            action.newCard;\r\n          break;\r\n        }\r\n        i = i + 1;\r\n      }\r\n      return { ...state, boards: [...newBoard] };\r\n    }\r\n    case DELETE_CARD: {\r\n      const newBoard: BoardType[] = [...state.boards];\r\n      let i = 0;\r\n      while (i < newBoard.length) {\r\n        if (newBoard[i].id === action.boardId) {\r\n          newBoard[i].lists[action.listIndex].cards.splice(action.index, 1);\r\n          break;\r\n        }\r\n        i = i + 1;\r\n      }\r\n      return { ...state, boards: [...newBoard] };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default BoardReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport trello from \"./trello\";\r\n\r\nconst rootReducer = combineReducers({\r\n  trello,\r\n});\r\n\r\nexport default rootReducer;\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport ReduxThunk from \"redux-thunk\";\r\nimport Reducer from \"./reducers\";\r\n\r\nconst createStoreWithMiddleware = applyMiddleware(ReduxThunk)(createStore);\r\n\r\nexport const store = createStoreWithMiddleware(\r\n  Reducer,\r\n  (window as any).__REDUX_DEVTOOLS_EXTENSION__ &&\r\n    (window as any).__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}