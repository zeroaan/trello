{"version":3,"sources":["store/actions/types.ts","store/reducers/trello.ts","store/reducers/index.ts","store/index.ts","components/Navbar.tsx","store/actions/trello.ts","components/Trello.tsx","components/ListCard.tsx","components/List.tsx","components/Board.tsx","App.tsx","index.tsx"],"names":["CHANGE_BOARD_NAME","ADD_BOARD","STAR_BOARD","DELETE_BOARD","CHANGE_LIST_TITLE","ADD_LIST","COPY_LIST","DELETE_LIST","ADD_CARD","EDIT_CARD","DELETE_CARD","initialState","newBoardId","starCount","boards","id","star","boardName","lists","title","cards","BoardReducer","state","action","type","newBoard","i","length","boardId","newBoardName","count","splice","index","newTitle","card","listIndex","newCard","rootReducer","combineReducers","trello","store","applyMiddleware","ReduxThunk","createStore","createStoreWithMiddleware","Reducer","window","__REDUX_DEVTOOLS_EXTENSION__","useStyles","makeStyles","appbar","backgroundColor","boxShadow","toolbar","display","justifyContent","minHeight","avatar","color","width","height","cursor","div","button","margin","textTransform","homeiconbutton","marginTop","background","addiconbutton","borderRadius","typography","fontFamily","position","right","userSelect","homeLink","textDecoration","top","left","zIndex","addBoard","addBoardtitle","addBoardInput","fontSize","outline","border","padding","resize","addBoardBt","closeIcon","Navbar","classes","history","useHistory","dispatch","useDispatch","useSelector","useState","setNewBoard","newBoardEl","useRef","onClickClose","current","style","AppBar","className","Toolbar","to","IconButton","Button","Typography","variant","onClick","Avatar","ref","Card","placeholder","onChange","e","value","target","maxLength","push","screen","maxWidth","maxHeight","flexDirection","alignItems","flexFlow","overflow","boardLink","boardBox","minWidth","transition","Trello","map","v","list","marginBottom","editIcon","editList","editListform","editListInput","editListBt","deleteListBt","blackBox","ListCard","setEditList","editListEl","editBlack","editEl","paperEl","textareaEl","useEffect","displayBlock","displayNone","Paper","onMouseOver","onMouseOut","wordBreak","scrollWidth","onSubmit","preventDefault","editCard","deleteCard","flexShrink","listName","listNameForm","menuBt","fontWeight","listNameInput","paddingTop","paddingLeft","addBt","addBtText","addCardInput","addCardBt","cardContent","listAc","listAcTitle","textAlign","listAcClose","listAcBack","listAcHr","listAcdivBt","listAcBt","listAcdiv","listAcaddListInput","listAcaddListBt","listAcDeleteListBt","List","textTitle","setTextTitle","setCard","newList","setNewList","cardAdd","textInput","cardInput","listAcEl","listAcCpEl","listAcDlEl","onBlurInput","changeListTitle","onClickAddBt","onClickListAcClose","CardHeader","disableTypography","onBlur","onMouseLeave","disableRipple","copyList","deleteList","CardContent","CardActions","addCard","boardNameText","flex","whiteSpace","boardNameForm","boardNameInput","starBt","deleteBt","addList","addListInput","addListBt","deleteBoardbox","deleteBoard","deleteBoardtitle","deleteBoarddesc","deleteBoardBt","closeIconDeleteBoard","Board","match","useRouteMatch","Number","params","firstBoardName","boardStar","forEach","setBoardName","bnEl","wtEl","stEl","addListEl","deleteBoardEl","changeBoardName","onClickStar","starBoard","undefined","App","basename","process","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.72663ffe.chunk.js","sourcesContent":["export const CHANGE_BOARD_NAME = \"CHANGE_BOARD_NAME\" as const;\r\nexport const ADD_BOARD = \"ADD_BOARD\" as const;\r\nexport const STAR_BOARD = \"STAR_BOARD\" as const;\r\nexport const DELETE_BOARD = \"DELETE_BOARD\" as const;\r\n\r\nexport const CHANGE_LIST_TITLE = \"CHANGE_LIST_TITLE\" as const;\r\nexport const ADD_LIST = \"ADD_LIST\" as const;\r\nexport const COPY_LIST = \"COPY_LIST\" as const;\r\nexport const DELETE_LIST = \"DELETE_LIST\" as const;\r\n\r\nexport const ADD_CARD = \"ADD_CARD\" as const;\r\nexport const EDIT_CARD = \"EDIT_CARD\" as const;\r\nexport const DELETE_CARD = \"DELETE_CARD\" as const;\r\n","import {\r\n  CHANGE_BOARD_NAME,\r\n  ADD_BOARD,\r\n  STAR_BOARD,\r\n  DELETE_BOARD,\r\n  CHANGE_LIST_TITLE,\r\n  ADD_LIST,\r\n  COPY_LIST,\r\n  DELETE_LIST,\r\n  ADD_CARD,\r\n  EDIT_CARD,\r\n  DELETE_CARD,\r\n} from \"../actions/types\";\r\nimport {\r\n  ChangeBoardNameAction,\r\n  AddBoardAction,\r\n  StarBoardAction,\r\n  DeleteBoardAction,\r\n  ChangeListTitleAction,\r\n  AddListAction,\r\n  CopyListAction,\r\n  DeleteListAction,\r\n  AddCardAction,\r\n  EditCardAction,\r\n  DeleteCardAction,\r\n} from \"../actions/trello\";\r\n\r\nexport type ListType = { title: string; cards: string[] }[];\r\nexport type BoardType = {\r\n  id: number;\r\n  star: boolean;\r\n  boardName: string;\r\n  lists: ListType;\r\n};\r\n\r\nexport interface BoardState {\r\n  newBoardId: number;\r\n  starCount: number;\r\n  boards: BoardType[];\r\n}\r\n\r\nconst initialState: BoardState = {\r\n  newBoardId: 2,\r\n  starCount: 1,\r\n  boards: [\r\n    {\r\n      id: 1,\r\n      star: true,\r\n      boardName: \"first board\",\r\n      lists: [\r\n        { title: \"To do\", cards: [\"doing\", \"test a game\", \"post\", \"hello\"] },\r\n        {\r\n          title: \"Doing\",\r\n          cards: [\"go to school\", \"watch\"],\r\n        },\r\n        { title: \"Complete\", cards: [\"pratice\", \"finish\", \"complete\"] },\r\n      ],\r\n    },\r\n    {\r\n      id: 2,\r\n      star: false,\r\n      boardName: \"second board\",\r\n      lists: [\r\n        { title: \"To do\", cards: [\"wow\", \"my second board\", \"front\"] },\r\n        {\r\n          title: \"Doing\",\r\n          cards: [\"buy coffee\", \"movie\", \"go to park\", \"learn math\"],\r\n        },\r\n        { title: \"Complete\", cards: [\"go to the gym\", \"computer\"] },\r\n      ],\r\n    },\r\n  ],\r\n};\r\n\r\ntype ListReducerActions =\r\n  | ChangeBoardNameAction\r\n  | AddBoardAction\r\n  | StarBoardAction\r\n  | DeleteBoardAction\r\n  | ChangeListTitleAction\r\n  | AddListAction\r\n  | CopyListAction\r\n  | DeleteListAction\r\n  | AddCardAction\r\n  | EditCardAction\r\n  | DeleteCardAction;\r\nconst BoardReducer = (state = initialState, action: ListReducerActions) => {\r\n  switch (action.type) {\r\n    case CHANGE_BOARD_NAME: {\r\n      const newBoard: BoardType[] = [...state.boards];\r\n      let i = 0;\r\n      while (i < newBoard.length) {\r\n        if (newBoard[i].id === action.boardId) {\r\n          newBoard[i].boardName = action.newBoardName;\r\n          break;\r\n        }\r\n        i = i + 1;\r\n      }\r\n      return { ...state, boards: [...newBoard] };\r\n    }\r\n    case ADD_BOARD: {\r\n      const newBoard: BoardType[] = [\r\n        ...state.boards,\r\n        {\r\n          id: state.newBoardId + 1,\r\n          star: false,\r\n          boardName: action.newBoardName,\r\n          lists: [\r\n            { title: \"To do\", cards: [] },\r\n            {\r\n              title: \"Doing\",\r\n              cards: [],\r\n            },\r\n            { title: \"Complete\", cards: [] },\r\n          ],\r\n        },\r\n      ];\r\n      return {\r\n        ...state,\r\n        boards: [...newBoard],\r\n        newBoardId: state.newBoardId + 1,\r\n      };\r\n    }\r\n    case STAR_BOARD: {\r\n      const newBoard: BoardType[] = [...state.boards];\r\n      let count = 0;\r\n      let i = 0;\r\n      while (i < newBoard.length) {\r\n        if (newBoard[i].id === action.boardId) {\r\n          newBoard[i].star = !newBoard[i].star;\r\n        }\r\n        if (newBoard[i].star === true) {\r\n          count = count + 1;\r\n        }\r\n        i = i + 1;\r\n      }\r\n      return { ...state, boards: [...newBoard], starCount: count };\r\n    }\r\n    case DELETE_BOARD: {\r\n      const newBoard: BoardType[] = [...state.boards];\r\n      let count = state.starCount;\r\n      let i = 0;\r\n      while (i < newBoard.length) {\r\n        if (newBoard[i].id === action.boardId) {\r\n          if (newBoard[i].star === true) {\r\n            count = count - 1;\r\n          }\r\n          newBoard.splice(i, 1);\r\n        }\r\n        i = i + 1;\r\n      }\r\n      return { ...state, boards: [...newBoard], starCount: count };\r\n    }\r\n    case CHANGE_LIST_TITLE: {\r\n      const newBoard: BoardType[] = [...state.boards];\r\n      let i = 0;\r\n      while (i < newBoard.length) {\r\n        if (newBoard[i].id === action.boardId) {\r\n          newBoard[i].lists[action.index].title = action.newTitle;\r\n          break;\r\n        }\r\n        i = i + 1;\r\n      }\r\n      return { ...state, boards: [...newBoard] };\r\n    }\r\n    case ADD_LIST: {\r\n      const newBoard: BoardType[] = [...state.boards];\r\n      let i = 0;\r\n      while (i < newBoard.length) {\r\n        if (newBoard[i].id === action.boardId) {\r\n          newBoard[i].lists = [\r\n            ...newBoard[i].lists,\r\n            { title: action.title, cards: [] },\r\n          ];\r\n          break;\r\n        }\r\n        i = i + 1;\r\n      }\r\n      return { ...state, boards: [...newBoard] };\r\n    }\r\n    case COPY_LIST: {\r\n      const newBoard: BoardType[] = [...state.boards];\r\n      let i = 0;\r\n      while (i < newBoard.length) {\r\n        if (newBoard[i].id === action.boardId) {\r\n          newBoard[i].lists.splice(action.index + 1, 0, {\r\n            title: action.title,\r\n            cards: [...newBoard[i].lists[action.index].cards],\r\n          });\r\n          break;\r\n        }\r\n        i = i + 1;\r\n      }\r\n      return { ...state, boards: [...newBoard] };\r\n    }\r\n    case DELETE_LIST: {\r\n      const newBoard: BoardType[] = [...state.boards];\r\n      let i = 0;\r\n      while (i < newBoard.length) {\r\n        if (newBoard[i].id === action.boardId) {\r\n          newBoard[i].lists.splice(action.index, 1);\r\n          break;\r\n        }\r\n        i = i + 1;\r\n      }\r\n      return { ...state, boards: [...newBoard] };\r\n    }\r\n    case ADD_CARD: {\r\n      const newBoard: BoardType[] = [...state.boards];\r\n      let i = 0;\r\n      while (i < newBoard.length) {\r\n        if (newBoard[i].id === action.boardId) {\r\n          newBoard[i].lists[action.index].cards = [\r\n            ...newBoard[i].lists[action.index].cards,\r\n            action.card,\r\n          ];\r\n          break;\r\n        }\r\n        i = i + 1;\r\n      }\r\n      return { ...state, boards: [...newBoard] };\r\n    }\r\n    case EDIT_CARD: {\r\n      const newBoard: BoardType[] = [...state.boards];\r\n      let i = 0;\r\n      while (i < newBoard.length) {\r\n        if (newBoard[i].id === action.boardId) {\r\n          newBoard[i].lists[action.listIndex].cards[action.index] =\r\n            action.newCard;\r\n          break;\r\n        }\r\n        i = i + 1;\r\n      }\r\n      return { ...state, boards: [...newBoard] };\r\n    }\r\n    case DELETE_CARD: {\r\n      const newBoard: BoardType[] = [...state.boards];\r\n      let i = 0;\r\n      while (i < newBoard.length) {\r\n        if (newBoard[i].id === action.boardId) {\r\n          newBoard[i].lists[action.listIndex].cards.splice(action.index, 1);\r\n          break;\r\n        }\r\n        i = i + 1;\r\n      }\r\n      return { ...state, boards: [...newBoard] };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default BoardReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport trello from \"./trello\";\r\n\r\nconst rootReducer = combineReducers({\r\n  trello,\r\n});\r\n\r\nexport default rootReducer;\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport ReduxThunk from \"redux-thunk\";\r\nimport Reducer from \"store/reducers\";\r\n\r\nconst createStoreWithMiddleware = applyMiddleware(ReduxThunk)(createStore);\r\n\r\nexport const store = createStoreWithMiddleware(\r\n  Reducer,\r\n  (window as any).__REDUX_DEVTOOLS_EXTENSION__ &&\r\n    (window as any).__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n","import React from \"react\";\r\nimport { useState, useRef } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { addBoard } from \"store/actions/trello\";\r\nimport { RootState } from \"store/reducers\";\r\nimport { BoardState } from \"store/reducers/trello\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  appbar: {\r\n    backgroundColor: \"rgba(0, 0, 0, 0.1)\",\r\n    boxShadow: \"none\",\r\n  },\r\n  toolbar: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    minHeight: \"48px\",\r\n  },\r\n  avatar: {\r\n    backgroundColor: \"rgb(223,225,230)\",\r\n    color: \"black\",\r\n    width: \"35px\",\r\n    height: \"35px\",\r\n    cursor: \"pointer\",\r\n  },\r\n  div: {\r\n    display: \"flex\",\r\n  },\r\n  button: {\r\n    margin: \"6px 15px\",\r\n    backgroundColor: \"rgba(154,160,163, 0.9)\",\r\n    height: \"35px\",\r\n    textTransform: \"none\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"rgba(140,147,150, 0.9)\",\r\n    },\r\n  },\r\n  homeiconbutton: {\r\n    marginTop: \"8px\",\r\n    width: \"30px\",\r\n    height: \"30px\",\r\n    \"&:hover\": {\r\n      background: \"none\",\r\n    },\r\n  },\r\n  addiconbutton: {\r\n    margin: \"0px 15px\",\r\n    backgroundColor: \"rgba(154,160,163, 0.9)\",\r\n    width: \"35px\",\r\n    height: \"35px\",\r\n    borderRadius: \"5px\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"rgba(140,147,150, 0.9)\",\r\n    },\r\n  },\r\n  typography: {\r\n    fontFamily: `\"Jua\", sans-serif`,\r\n    position: \"relative\",\r\n    right: \"20px\",\r\n    userSelect: \"none\",\r\n  },\r\n  homeLink: {\r\n    textDecoration: \"none\",\r\n    color: \"white\",\r\n  },\r\n  newBoard: {\r\n    display: \"none\",\r\n    position: \"fixed\",\r\n    top: 0,\r\n    left: 0,\r\n    width: \"100vw\",\r\n    height: \"100vh\",\r\n    zIndex: 1100,\r\n    backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n  },\r\n  addBoard: {\r\n    backgroundColor: \"rgb(235,236,240)\",\r\n    width: \"370px\",\r\n    height: \"200px\",\r\n    margin: \"auto\",\r\n    position: \"relative\",\r\n    top: \"230px\",\r\n  },\r\n  addBoardtitle: {\r\n    position: \"relative\",\r\n    top: \"25px\",\r\n    left: \"43px\",\r\n  },\r\n  addBoardInput: {\r\n    position: \"relative\",\r\n    top: \"50px\",\r\n    left: \"40px\",\r\n    fontSize: \"15px\",\r\n    outline: \"none\",\r\n    border: \"2px solid rgb(0,121,191)\",\r\n    borderRadius: \"5px\",\r\n    width: \"256px\",\r\n    height: \"17px\",\r\n    padding: \"10px 10px\",\r\n    resize: \"none\",\r\n    \"&::-webkit-scrollbar\": {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  addBoardBt: {\r\n    position: \"relative\",\r\n    top: \"60px\",\r\n    left: \"115px\",\r\n    outline: \"none\",\r\n    border: \"none\",\r\n    zIndex: 1200,\r\n    borderRadius: \"5px\",\r\n    backgroundColor: \"rgb(90,172,68)\",\r\n    marginTop: \"10px\",\r\n    color: \"white\",\r\n    padding: \"8px 16px\",\r\n    fontSize: \"15px\",\r\n    cursor: \"pointer\",\r\n  },\r\n  closeIcon: {\r\n    position: \"relative\",\r\n    top: \"-50px\",\r\n    left: \"180px\",\r\n    cursor: \"pointer\",\r\n    color: \"rgb(108,120,141)\",\r\n    fontSize: \"28px\",\r\n  },\r\n});\r\n\r\nconst Navbar = () => {\r\n  const classes = useStyles();\r\n\r\n  const history = useHistory();\r\n\r\n  const dispatch = useDispatch();\r\n  const { newBoardId } = useSelector<RootState, BoardState>(\r\n    (state: RootState) => state.trello\r\n  );\r\n\r\n  const [newBoard, setNewBoard] = useState(\"\");\r\n\r\n  const newBoardEl = useRef<HTMLDivElement>(null);\r\n\r\n  const onChangeBoard = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { value } = e.target;\r\n    setNewBoard(value);\r\n  };\r\n  const onClickNewBoard = () => {\r\n    if (newBoardEl.current) {\r\n      newBoardEl.current.style.display = \"block\";\r\n    }\r\n  };\r\n  const onClickAddBoard = () => {\r\n    if (newBoard !== \"\") {\r\n      onClickClose();\r\n      dispatch(addBoard(newBoard));\r\n      history.push(`/board/${newBoardId + 1}`);\r\n    }\r\n  };\r\n  const onClickClose = () => {\r\n    if (newBoardEl.current) {\r\n      newBoardEl.current.style.display = \"none\";\r\n    }\r\n    setNewBoard(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AppBar className={classes.appbar}>\r\n        <Toolbar className={classes.toolbar}>\r\n          <div className={classes.div}>\r\n            <Link to=\"/\" className={classes.homeLink}>\r\n              <IconButton className={classes.homeiconbutton} color=\"inherit\">\r\n                <HomeIcon />\r\n              </IconButton>\r\n            </Link>\r\n            <Link to=\"/\" className={classes.homeLink}>\r\n              <Button className={classes.button} color=\"inherit\">\r\n                Boards\r\n              </Button>\r\n            </Link>\r\n          </div>\r\n          <Typography className={classes.typography} variant=\"h6\">\r\n            Trello\r\n          </Typography>\r\n          <div className={classes.div}>\r\n            <IconButton\r\n              className={classes.addiconbutton}\r\n              color=\"inherit\"\r\n              onClick={onClickNewBoard}\r\n            >\r\n              <AddIcon />\r\n            </IconButton>\r\n            <Avatar className={classes.avatar}>A</Avatar>\r\n          </div>\r\n          <div ref={newBoardEl} className={classes.newBoard}>\r\n            <Card className={classes.addBoard}>\r\n              <div>\r\n                <h3 className={classes.addBoardtitle}>New Board</h3>\r\n                <input\r\n                  className={classes.addBoardInput}\r\n                  placeholder=\"Input Board Name ...\"\r\n                  onChange={onChangeBoard}\r\n                  value={newBoard}\r\n                  maxLength={15}\r\n                />\r\n                <button\r\n                  className={classes.addBoardBt}\r\n                  onClick={onClickAddBoard}\r\n                >\r\n                  Create a Board\r\n                </button>\r\n                <CloseIcon\r\n                  className={classes.closeIcon}\r\n                  onClick={onClickClose}\r\n                />\r\n              </div>\r\n            </Card>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import {\r\n  CHANGE_BOARD_NAME,\r\n  ADD_BOARD,\r\n  STAR_BOARD,\r\n  DELETE_BOARD,\r\n  CHANGE_LIST_TITLE,\r\n  ADD_LIST,\r\n  COPY_LIST,\r\n  DELETE_LIST,\r\n  ADD_CARD,\r\n  EDIT_CARD,\r\n  DELETE_CARD,\r\n} from \"./types\";\r\n\r\nexport interface ChangeBoardNameAction {\r\n  type: typeof CHANGE_BOARD_NAME;\r\n  newBoardName: string;\r\n  boardId: number;\r\n}\r\nexport interface AddBoardAction {\r\n  type: typeof ADD_BOARD;\r\n  newBoardName: string;\r\n}\r\nexport interface StarBoardAction {\r\n  type: typeof STAR_BOARD;\r\n  boardId: number;\r\n}\r\nexport interface DeleteBoardAction {\r\n  type: typeof DELETE_BOARD;\r\n  boardId: number;\r\n}\r\n\r\nexport interface ChangeListTitleAction {\r\n  type: typeof CHANGE_LIST_TITLE;\r\n  newTitle: string;\r\n  index: number;\r\n  boardId: number;\r\n}\r\n\r\nexport interface AddListAction {\r\n  type: typeof ADD_LIST;\r\n  title: string;\r\n  boardId: number;\r\n}\r\n\r\nexport interface CopyListAction {\r\n  type: typeof COPY_LIST;\r\n  title: string;\r\n  index: number;\r\n  boardId: number;\r\n}\r\n\r\nexport interface DeleteListAction {\r\n  type: typeof DELETE_LIST;\r\n  index: number;\r\n  boardId: number;\r\n}\r\n\r\nexport interface AddCardAction {\r\n  type: typeof ADD_CARD;\r\n  card: string;\r\n  index: number;\r\n  boardId: number;\r\n}\r\n\r\nexport interface EditCardAction {\r\n  type: typeof EDIT_CARD;\r\n  newCard: string;\r\n  index: number;\r\n  listIndex: number;\r\n  boardId: number;\r\n}\r\n\r\nexport interface DeleteCardAction {\r\n  type: typeof DELETE_CARD;\r\n  index: number;\r\n  listIndex: number;\r\n  boardId: number;\r\n}\r\n\r\nexport const changeBoardName = (newBoardName: string, boardId: number) => {\r\n  return {\r\n    type: CHANGE_BOARD_NAME,\r\n    newBoardName,\r\n    boardId,\r\n  };\r\n};\r\nexport const addBoard = (newBoardName: string) => {\r\n  return {\r\n    type: ADD_BOARD,\r\n    newBoardName,\r\n  };\r\n};\r\nexport const starBoard = (boardId: number) => {\r\n  return {\r\n    type: STAR_BOARD,\r\n    boardId,\r\n  };\r\n};\r\nexport const deleteBoard = (boardId: number) => {\r\n  return {\r\n    type: DELETE_BOARD,\r\n    boardId,\r\n  };\r\n};\r\n\r\nexport const changeListTitle = (\r\n  newTitle: string,\r\n  index: number,\r\n  boardId: number\r\n) => {\r\n  return {\r\n    type: CHANGE_LIST_TITLE,\r\n    newTitle,\r\n    index,\r\n    boardId,\r\n  };\r\n};\r\n\r\nexport const addList = (title: string, boardId: number) => {\r\n  return {\r\n    type: ADD_LIST,\r\n    title,\r\n    boardId,\r\n  };\r\n};\r\n\r\nexport const copyList = (title: string, index: number, boardId: number) => {\r\n  return {\r\n    type: COPY_LIST,\r\n    title,\r\n    index,\r\n    boardId,\r\n  };\r\n};\r\n\r\nexport const deleteList = (index: number, boardId: number) => {\r\n  return {\r\n    type: DELETE_LIST,\r\n    index,\r\n    boardId,\r\n  };\r\n};\r\n\r\nexport const addCard = (card: string, index: number, boardId: number) => {\r\n  return {\r\n    type: ADD_CARD,\r\n    card,\r\n    index,\r\n    boardId,\r\n  };\r\n};\r\n\r\nexport const editCard = (\r\n  newCard: string,\r\n  index: number,\r\n  listIndex: number,\r\n  boardId: number\r\n) => {\r\n  return {\r\n    type: EDIT_CARD,\r\n    newCard,\r\n    index,\r\n    listIndex,\r\n    boardId,\r\n  };\r\n};\r\n\r\nexport const deleteCard = (\r\n  index: number,\r\n  listIndex: number,\r\n  boardId: number\r\n) => {\r\n  return {\r\n    type: DELETE_CARD,\r\n    index,\r\n    listIndex,\r\n    boardId,\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { RootState } from \"store/reducers\";\r\nimport { BoardState } from \"store/reducers/trello\";\r\n\r\nimport Navbar from \"components/Navbar\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  screen: {\r\n    maxWidth: \"98vw\",\r\n    maxHeight: \"90vh\",\r\n    position: \"relative\",\r\n    top: \"150px\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  boards: {\r\n    marginTop: \"10px\",\r\n    width: \"730px\",\r\n    height: \"150px\",\r\n    display: \"flex\",\r\n    flexFlow: \"nowrap\",\r\n    overflow: \"auto\",\r\n    \"&::-webkit-scrollbar\": {\r\n      height: \"11px\",\r\n    },\r\n    \"&::-webkit-scrollbar-thumb\": {\r\n      backgroundColor: \"rgb(191,196,206)\",\r\n      borderRadius: \"10px\",\r\n    },\r\n    \"&::-webkit-scrollbar-track\": {\r\n      backgroundColor: \"rgb(218,219,226)\",\r\n      borderRadius: \"10px\",\r\n    },\r\n  },\r\n  boardLink: {\r\n    position: \"relative\",\r\n    left: \"-7px\",\r\n    height: \"80px\",\r\n    textDecoration: \"none\",\r\n    color: \"black\",\r\n    fontSize: \"17px\",\r\n    margin: \"6px 8px\",\r\n    \"&:hover\": {\r\n      color: \"black\",\r\n    },\r\n  },\r\n  boardBox: {\r\n    borderRadius: \"3px\",\r\n    backgroundColor: \"white\",\r\n    minWidth: \"145px\",\r\n    maxWidth: \"145px\",\r\n    minHeight: \"80px\",\r\n    maxHeight: \"80px\",\r\n    padding: \"15px\",\r\n    transition: \"all 0.3s ease\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"rgb(231,233,237)\",\r\n    },\r\n  },\r\n});\r\n\r\nconst Trello = () => {\r\n  const classes = useStyles();\r\n\r\n  const { starCount, boards } = useSelector<RootState, BoardState>(\r\n    (state: RootState) => state.trello\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <div className={classes.screen}>\r\n        <div>\r\n          <h3>My Boards</h3>\r\n          <div className={classes.boards}>\r\n            {boards.map((v, i) => (\r\n              <Link key={i} to={`/board/${v.id}`} className={classes.boardLink}>\r\n                <div className={classes.boardBox}>{v.boardName}</div>\r\n              </Link>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        {starCount === 0 ? null : (\r\n          <div style={{ marginTop: \"30px\" }}>\r\n            <h3>Starred Boards</h3>\r\n            <div className={classes.boards}>\r\n              {boards.map((v, i) => {\r\n                if (v.star === true) {\r\n                  return (\r\n                    <Link\r\n                      key={i}\r\n                      to={`/board/${v.id}`}\r\n                      className={classes.boardLink}\r\n                    >\r\n                      <div className={classes.boardBox}>{v.boardName}</div>\r\n                    </Link>\r\n                  );\r\n                } else {\r\n                  return null;\r\n                }\r\n              })}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Trello;\r\n","import React from \"react\";\r\nimport { useEffect, useState, useRef } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { editCard, deleteCard } from \"store/actions/trello\";\r\n\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  list: {\r\n    minHeight: \"20px\",\r\n    position: \"relative\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    marginBottom: \"8px\",\r\n    padding: \"12px\",\r\n    cursor: \"pointer\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"rgb(244,245,247)\",\r\n    },\r\n  },\r\n  editIcon: {\r\n    color: \"rgb(131,140,145)\",\r\n    display: \"none\",\r\n    padding: \"10px\",\r\n    position: \"absolute\",\r\n    top: \"4px\",\r\n    right: \"4px\",\r\n    fontSize: \"16px\",\r\n    borderRadius: \"5px\",\r\n    \"&:hover\": {\r\n      color: \"black\",\r\n      backgroundColor: \"rgb(235,236,240)\",\r\n    },\r\n  },\r\n  editList: {\r\n    width: \"235px\",\r\n    minHeight: \"20px\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    marginBottom: \"8px\",\r\n    padding: \"12px\",\r\n    cursor: \"pointer\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"rgb(244,245,247)\",\r\n    },\r\n  },\r\n  editListform: {\r\n    display: \"none\",\r\n  },\r\n  editListInput: {\r\n    position: \"absolute\",\r\n    top: \"-12px\",\r\n    left: 0,\r\n    fontSize: \"16px\",\r\n    outline: \"none\",\r\n    border: \"none\",\r\n    borderRadius: \"5px\",\r\n    width: \"252px\",\r\n    height: \"60px\",\r\n    padding: \"12px 12px\",\r\n    marginTop: \"12px\",\r\n    resize: \"none\",\r\n    zIndex: 1200,\r\n    \"&::-webkit-scrollbar\": {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  editListBt: {\r\n    position: \"absolute\",\r\n    top: \"80px\",\r\n    left: \"0px\",\r\n    outline: \"none\",\r\n    border: \"none\",\r\n    zIndex: 1200,\r\n    borderRadius: \"5px\",\r\n    backgroundColor: \"rgb(90,172,68)\",\r\n    marginTop: \"10px\",\r\n    color: \"white\",\r\n    padding: \"8px 21px\",\r\n    fontSize: \"16px\",\r\n    cursor: \"pointer\",\r\n  },\r\n  deleteListBt: {\r\n    position: \"absolute\",\r\n    top: \"80px\",\r\n    left: \"85px\",\r\n    outline: \"none\",\r\n    border: \"none\",\r\n    zIndex: 1200,\r\n    borderRadius: \"5px\",\r\n    backgroundColor: \"rgb(250,60,84)\",\r\n    marginTop: \"10px\",\r\n    color: \"white\",\r\n    padding: \"8px 15px\",\r\n    fontSize: \"16px\",\r\n    cursor: \"pointer\",\r\n  },\r\n  closeIcon: {\r\n    position: \"absolute\",\r\n    top: \"93px\",\r\n    left: \"245px\",\r\n    cursor: \"pointer\",\r\n    color: \"black\",\r\n    fontSize: \"25px\",\r\n    zIndex: 1200,\r\n  },\r\n  blackBox: {\r\n    display: \"none\",\r\n    position: \"fixed\",\r\n    top: 0,\r\n    left: 0,\r\n    width: \"100vw\",\r\n    height: \"100vh\",\r\n    zIndex: 1100,\r\n    backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n  },\r\n});\r\n\r\ninterface Props {\r\n  list: string;\r\n  index: number;\r\n  listIndex: number;\r\n  boardId: number;\r\n}\r\n\r\nconst ListCard: React.FC<Props> = ({ list, index, listIndex, boardId }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const classes = useStyles();\r\n\r\n  const [editList, setEditList] = useState(list);\r\n  const editListEl = useRef<HTMLDivElement>(null);\r\n  const editBlack = useRef<HTMLDivElement>(null);\r\n  const editEl = useRef<SVGSVGElement>(null);\r\n  const paperEl = useRef<HTMLDivElement>(null);\r\n  const textareaEl = useRef<HTMLTextAreaElement>(null);\r\n\r\n  useEffect(() => {\r\n    setEditList(list);\r\n  }, [list]);\r\n\r\n  const displayBlock = (\r\n    ref: React.RefObject<HTMLDivElement | SVGSVGElement>\r\n  ) => {\r\n    if (ref.current) {\r\n      ref.current.style.display = \"block\";\r\n    }\r\n  };\r\n  const displayNone = (\r\n    ref: React.RefObject<HTMLDivElement | SVGSVGElement>\r\n  ) => {\r\n    if (ref.current) {\r\n      ref.current.style.display = \"none\";\r\n    }\r\n  };\r\n  const onClickEditList = () => {\r\n    displayBlock(editListEl);\r\n    displayBlock(editBlack);\r\n    if (paperEl.current && textareaEl.current) {\r\n      textareaEl.current.style.width = `${paperEl.current.scrollWidth - 24}px`;\r\n    }\r\n  };\r\n  const onChangeEditList = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n    const { value } = e.target;\r\n    setEditList(value);\r\n  };\r\n  const onSubmitForm = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n  };\r\n  const onClickSave = () => {\r\n    if (editList !== \"\") {\r\n      displayNone(editListEl);\r\n      displayNone(editBlack);\r\n      dispatch(editCard(editList, index, listIndex, boardId));\r\n    }\r\n  };\r\n  const onClickDelete = () => {\r\n    displayNone(editListEl);\r\n    displayNone(editBlack);\r\n    dispatch(deleteCard(index, listIndex, boardId));\r\n  };\r\n  const onClickClose = () => {\r\n    displayNone(editListEl);\r\n    displayNone(editBlack);\r\n    setEditList(list);\r\n  };\r\n\r\n  return (\r\n    <div style={{ position: \"relative\" }}>\r\n      <Paper\r\n        ref={paperEl}\r\n        className={classes.list}\r\n        onMouseOver={() => displayBlock(editEl)}\r\n        onMouseOut={() => displayNone(editEl)}\r\n      >\r\n        <p style={{ maxWidth: \"250px\", wordBreak: \"break-word\" }}>{list}</p>\r\n        <CreateIcon\r\n          ref={editEl}\r\n          className={classes.editIcon}\r\n          onClick={onClickEditList}\r\n        />\r\n      </Paper>\r\n      <div\r\n        ref={editBlack}\r\n        className={classes.blackBox}\r\n        onClick={onClickClose}\r\n      ></div>\r\n      <div ref={editListEl} className={classes.editListform}>\r\n        <div style={{ height: \"82px\" }}></div>\r\n        <form onSubmit={onSubmitForm}>\r\n          <textarea\r\n            ref={textareaEl}\r\n            className={classes.editListInput}\r\n            placeholder=\"Input card ...\"\r\n            value={editList}\r\n            onChange={onChangeEditList}\r\n          />\r\n        </form>\r\n        <CloseIcon className={classes.closeIcon} onClick={onClickClose} />\r\n        <button className={classes.editListBt} onClick={onClickSave}>\r\n          Save\r\n        </button>\r\n        <button className={classes.deleteListBt} onClick={onClickDelete}>\r\n          Delete\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListCard;\r\n","import React from \"react\";\r\nimport { useEffect, useState, useRef } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport {\r\n  changeListTitle,\r\n  addCard,\r\n  copyList,\r\n  deleteList,\r\n} from \"store/actions/trello\";\r\n\r\nimport ListCard from \"components/ListCard\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  list: {\r\n    flexShrink: 0,\r\n    position: \"relative\",\r\n    backgroundColor: \"rgb(235,236,240)\",\r\n    width: \"300px\",\r\n    height: \"100%\",\r\n    margin: \"0 0 0 16px\",\r\n    overflow: \"visible\",\r\n  },\r\n  listName: {\r\n    margin: \"13px 10px\",\r\n    fontSize: \"18px\",\r\n    width: \"210px\",\r\n    height: \"1px\",\r\n    cursor: \"pointer\",\r\n  },\r\n  listNameForm: {\r\n    position: \"absolute\",\r\n    top: \"13px\",\r\n    left: \"12px\",\r\n  },\r\n  menuBt: {\r\n    fontSize: \"18px\",\r\n    position: \"absolute\",\r\n    top: \"15px\",\r\n    right: \"12px\",\r\n    fontWeight: \"bold\",\r\n    outline: \"none\",\r\n    border: \"none\",\r\n    cursor: \"pointer\",\r\n    borderRadius: \"50px\",\r\n    backgroundColor: \"rgb(235,236,240)\",\r\n  },\r\n  listNameInput: {\r\n    paddingTop: \"2px\",\r\n    paddingLeft: \"12px\",\r\n    fontSize: \"18px\",\r\n    outline: \"none\",\r\n    border: \"2px solid rgb(0,121,191)\",\r\n    borderRadius: \"5px\",\r\n    width: \"230px\",\r\n    height: \"25px\",\r\n    display: \"none\",\r\n  },\r\n  addBt: {\r\n    width: \"100%\",\r\n    textTransform: \"none\",\r\n  },\r\n  addBtText: {\r\n    display: \"none\",\r\n    position: \"relative\",\r\n    top: \"-8px\",\r\n    left: \"-4px\",\r\n  },\r\n  addCardInput: {\r\n    boxShadow:\r\n      \"0px 2px 1px -1px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 1px 3px 0px rgba(0,0,0,0.12)\",\r\n    fontSize: \"15px\",\r\n    outline: \"none\",\r\n    border: \"none\",\r\n    borderRadius: \"5px\",\r\n    width: \"256px\",\r\n    height: \"60px\",\r\n    padding: \"10px 10px\",\r\n    marginTop: \"12px\",\r\n    resize: \"none\",\r\n    \"&::-webkit-scrollbar\": {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  addCardBt: {\r\n    borderRadius: \"5px\",\r\n    outline: \"none\",\r\n    border: \"none\",\r\n    backgroundColor: \"rgb(90,172,68)\",\r\n    marginTop: \"10px\",\r\n    color: \"white\",\r\n    padding: \"6px 10px\",\r\n    fontSize: \"16px\",\r\n    cursor: \"pointer\",\r\n  },\r\n  closeIcon: {\r\n    position: \"relative\",\r\n    top: \"7px\",\r\n    left: \"8px\",\r\n    cursor: \"pointer\",\r\n    color: \"rgb(108,120,141)\",\r\n    fontSize: \"25px\",\r\n  },\r\n  cardContent: {\r\n    padding: \"0 12px\",\r\n    overflow: \"auto\",\r\n    maxHeight: \"375px\",\r\n    \"&::-webkit-scrollbar\": {\r\n      width: \"8px\",\r\n    },\r\n    \"&::-webkit-scrollbar-thumb\": {\r\n      backgroundColor: \"rgb(191,196,206)\",\r\n      borderRadius: \"10px\",\r\n    },\r\n    \"&::-webkit-scrollbar-track\": {\r\n      backgroundColor: \"rgb(218,219,226)\",\r\n      borderRadius: \"10px\",\r\n    },\r\n  },\r\n  listAc: {\r\n    zIndex: 100,\r\n    position: \"absolute\",\r\n    top: \"13px\",\r\n    right: \"-160px\",\r\n    width: \"200px\",\r\n    height: \"165px\",\r\n    border: \"1px solid rgb(218,219,226)\",\r\n    display: \"none\",\r\n  },\r\n  listAcTitle: {\r\n    fontFamily: `\"Jua\", sans-serif`,\r\n    position: \"relative\",\r\n    top: \"8px\",\r\n    textAlign: \"center\",\r\n  },\r\n  listAcClose: {\r\n    position: \"absolute\",\r\n    top: \"12px\",\r\n    right: \"9px\",\r\n    fontSize: \"17px\",\r\n    cursor: \"pointer\",\r\n  },\r\n  listAcBack: {\r\n    position: \"absolute\",\r\n    top: \"12px\",\r\n    left: \"9px\",\r\n    fontSize: \"15px\",\r\n    cursor: \"pointer\",\r\n    zIndex: 1,\r\n  },\r\n  listAcHr: {\r\n    position: \"relative\",\r\n    top: \"10px\",\r\n    width: \"170px\",\r\n    margin: \"auto\",\r\n    border: \"1px solid rgb(218,219,226)\",\r\n    backgroundColor: \"rgb(218,219,226)\",\r\n  },\r\n  listAcdivBt: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    marginTop: \"15px\",\r\n  },\r\n  listAcBt: {\r\n    width: \"179px\",\r\n  },\r\n  listAcdiv: {\r\n    margin: \"20px 15px\",\r\n  },\r\n  listAcaddListInput: {\r\n    fontSize: \"15px\",\r\n    outline: \"none\",\r\n    border: \"2px solid rgb(0,121,191)\",\r\n    borderRadius: \"5px\",\r\n    width: \"145px\",\r\n    height: \"12px\",\r\n    padding: \"10px 10px\",\r\n    margin: \"8px 0px\",\r\n    resize: \"none\",\r\n    \"&::-webkit-scrollbar\": {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  listAcaddListBt: {\r\n    borderRadius: \"5px\",\r\n    outline: \"none\",\r\n    border: \"none\",\r\n    backgroundColor: \"rgb(90,172,68)\",\r\n    color: \"white\",\r\n    padding: \"6px 8px\",\r\n    fontSize: \"15px\",\r\n    cursor: \"pointer\",\r\n  },\r\n  listAcDeleteListBt: {\r\n    margin: \"0 47px\",\r\n    borderRadius: \"5px\",\r\n    outline: \"none\",\r\n    border: \"none\",\r\n    backgroundColor: \"rgb(250,60,84)\",\r\n    color: \"white\",\r\n    padding: \"6px 16px\",\r\n    fontSize: \"15px\",\r\n    cursor: \"pointer\",\r\n  },\r\n});\r\n\r\ninterface Props {\r\n  title: string;\r\n  list: string[];\r\n  index: number;\r\n  boardId: number;\r\n}\r\n\r\nconst List: React.FC<Props> = ({ title, list, index, boardId }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const classes = useStyles();\r\n\r\n  const [textTitle, setTextTitle] = useState(title);\r\n  const [card, setCard] = useState(\"\");\r\n  const [newList, setNewList] = useState(\"\");\r\n  const cardAdd = useRef<HTMLButtonElement>(null);\r\n  const textInput = useRef<HTMLInputElement>(null);\r\n  const cardInput = useRef<HTMLInputElement>(null);\r\n  const listAcEl = useRef<HTMLDivElement>(null);\r\n  const listAcCpEl = useRef<HTMLDivElement>(null);\r\n  const listAcDlEl = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    setTextTitle(title);\r\n  }, [title]);\r\n\r\n  const displayBlock = (\r\n    ref: React.RefObject<HTMLButtonElement | HTMLInputElement | HTMLDivElement>\r\n  ) => {\r\n    if (ref.current) {\r\n      ref.current.style.display = \"block\";\r\n    }\r\n  };\r\n  const displayNone = (\r\n    ref: React.RefObject<HTMLButtonElement | HTMLInputElement | HTMLDivElement>\r\n  ) => {\r\n    if (ref.current) {\r\n      ref.current.style.display = \"none\";\r\n    }\r\n  };\r\n  const onChangeInput = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { value } = e.target;\r\n    setTextTitle(value);\r\n  };\r\n  const onSubmitForm = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    onBlurInput();\r\n  };\r\n  const onBlurInput = () => {\r\n    if (textTitle !== \"\") {\r\n      displayNone(textInput);\r\n      dispatch(changeListTitle(textTitle, index, boardId));\r\n    }\r\n  };\r\n  const onClickAddBt = () => {\r\n    displayBlock(cardInput);\r\n    displayNone(cardAdd);\r\n  };\r\n  const onClickAddCard = () => {\r\n    if (card !== \"\") {\r\n      dispatch(addCard(card, index, boardId));\r\n      setCard(\"\");\r\n    }\r\n  };\r\n  const onChangeCard = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n    const { value } = e.target;\r\n    setCard(value);\r\n  };\r\n  const onClickClose = () => {\r\n    displayBlock(cardAdd);\r\n    displayNone(cardInput);\r\n  };\r\n  const onClickListAcClose = () => {\r\n    displayNone(listAcEl);\r\n    displayNone(listAcCpEl);\r\n    displayNone(listAcDlEl);\r\n    setNewList(\"\");\r\n  };\r\n  const onClickListAcAddCard = () => {\r\n    onClickListAcClose();\r\n    onClickAddBt();\r\n  };\r\n  const onClickListAcCopy = () => {\r\n    displayNone(listAcEl);\r\n    displayBlock(listAcCpEl);\r\n  };\r\n  const onClickListAcDelete = () => {\r\n    displayNone(listAcEl);\r\n    displayBlock(listAcDlEl);\r\n  };\r\n  const onChangeList = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { value } = e.target;\r\n    setNewList(value);\r\n  };\r\n  const onClickAddList = () => {\r\n    if (newList !== \"\") {\r\n      onClickListAcClose();\r\n      dispatch(copyList(newList, index, boardId));\r\n      setNewList(\"\");\r\n    }\r\n  };\r\n  const onClickDeleteList = () => {\r\n    onClickListAcClose();\r\n    dispatch(deleteList(index, boardId));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card className={classes.list}>\r\n        <CardHeader\r\n          className={classes.listName}\r\n          title={title}\r\n          onClick={() => displayBlock(textInput)}\r\n          disableTypography\r\n        />\r\n        <form className={classes.listNameForm} onSubmit={onSubmitForm}>\r\n          <input\r\n            ref={textInput}\r\n            className={classes.listNameInput}\r\n            value={textTitle}\r\n            onChange={onChangeInput}\r\n            onBlur={onBlurInput}\r\n            maxLength={15}\r\n          />\r\n        </form>\r\n        <button\r\n          className={classes.menuBt}\r\n          onClick={() => displayBlock(listAcEl)}\r\n        >\r\n          ⋯\r\n        </button>\r\n        <div onMouseLeave={onClickListAcClose}>\r\n          <Paper ref={listAcEl} className={classes.listAc}>\r\n            <Typography className={classes.listAcTitle} variant=\"subtitle1\">\r\n              List Actions\r\n            </Typography>\r\n            <CloseIcon\r\n              className={classes.listAcClose}\r\n              onClick={onClickListAcClose}\r\n            />\r\n            <hr className={classes.listAcHr} />\r\n            <div className={classes.listAcdivBt}>\r\n              <Button\r\n                className={classes.listAcBt}\r\n                onClick={onClickListAcAddCard}\r\n                disableRipple\r\n              >\r\n                Add Card\r\n              </Button>\r\n              <Button\r\n                className={classes.listAcBt}\r\n                onClick={onClickListAcCopy}\r\n                disableRipple\r\n              >\r\n                Copy List\r\n              </Button>\r\n              <Button\r\n                className={classes.listAcBt}\r\n                onClick={onClickListAcDelete}\r\n                disableRipple\r\n              >\r\n                Delete This List\r\n              </Button>\r\n            </div>\r\n          </Paper>\r\n          <Paper\r\n            ref={listAcCpEl}\r\n            className={classes.listAc}\r\n            onMouseLeave={onClickListAcClose}\r\n          >\r\n            <Typography className={classes.listAcTitle} variant=\"subtitle1\">\r\n              Copy List\r\n            </Typography>\r\n            <CloseIcon\r\n              className={classes.listAcClose}\r\n              onClick={onClickListAcClose}\r\n            />\r\n            <hr className={classes.listAcHr} />\r\n            <div className={classes.listAcdiv}>\r\n              <p>Name</p>\r\n              <input\r\n                className={classes.listAcaddListInput}\r\n                placeholder=\"Input List title ...\"\r\n                onChange={onChangeList}\r\n                value={newList}\r\n                maxLength={15}\r\n              />\r\n              <button\r\n                className={classes.listAcaddListBt}\r\n                onClick={onClickAddList}\r\n              >\r\n                Create\r\n              </button>\r\n            </div>\r\n          </Paper>\r\n          <Paper\r\n            ref={listAcDlEl}\r\n            className={classes.listAc}\r\n            onMouseLeave={onClickListAcClose}\r\n          >\r\n            <Typography className={classes.listAcTitle} variant=\"subtitle1\">\r\n              Delete List\r\n            </Typography>\r\n            <CloseIcon\r\n              className={classes.listAcClose}\r\n              onClick={onClickListAcClose}\r\n            />\r\n            <hr className={classes.listAcHr} />\r\n            <div className={classes.listAcdiv}>\r\n              <p style={{ margin: \"35px 0 20px 0\" }}>\r\n                삭제 후 되돌릴 수 없습니다.\r\n              </p>\r\n              <button\r\n                className={classes.listAcDeleteListBt}\r\n                onClick={onClickDeleteList}\r\n              >\r\n                Delete\r\n              </button>\r\n            </div>\r\n          </Paper>\r\n        </div>\r\n        <CardContent className={classes.cardContent}>\r\n          {list.map((v, i) => (\r\n            <ListCard\r\n              key={i}\r\n              list={v}\r\n              index={i}\r\n              listIndex={index}\r\n              boardId={boardId}\r\n            />\r\n          ))}\r\n        </CardContent>\r\n        <CardActions>\r\n          <Button\r\n            ref={cardAdd}\r\n            className={classes.addBt}\r\n            onClick={onClickAddBt}\r\n            disableRipple\r\n          >\r\n            + Add a Card\r\n          </Button>\r\n          <div ref={cardInput} className={classes.addBtText}>\r\n            <textarea\r\n              className={classes.addCardInput}\r\n              placeholder=\"Input card ...\"\r\n              onChange={onChangeCard}\r\n              value={card}\r\n            />\r\n            <button className={classes.addCardBt} onClick={onClickAddCard}>\r\n              Add Card\r\n            </button>\r\n            <CloseIcon className={classes.closeIcon} onClick={onClickClose} />\r\n          </div>\r\n        </CardActions>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import React from \"react\";\r\nimport { useState, useRef, useEffect } from \"react\";\r\nimport { useRouteMatch, useHistory } from \"react-router\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport {\r\n  changeBoardName,\r\n  starBoard,\r\n  deleteBoard,\r\n  addList,\r\n} from \"store/actions/trello\";\r\nimport { RootState } from \"store/reducers\";\r\nimport { BoardState, ListType } from \"store/reducers/trello\";\r\n\r\nimport List from \"components/List\";\r\nimport Navbar from \"components/Navbar\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  screen: {\r\n    maxWidth: \"98vw\",\r\n    maxHeight: \"90vh\",\r\n    position: \"relative\",\r\n    top: \"58px\",\r\n    left: \"1vw\",\r\n  },\r\n  boardName: {\r\n    display: \"flex\",\r\n    marginBottom: \"12px\",\r\n  },\r\n  boardNameText: {\r\n    position: \"absolute\",\r\n    top: 0,\r\n    left: \"60px\",\r\n    padding: \"4px 12px 2px 12px\",\r\n    flex: \"0 1 auto\",\r\n    color: \"white\",\r\n    borderRadius: \"5px\",\r\n    fontFamily: `\"Jua\", sans-serif`,\r\n    cursor: \"pointer\",\r\n    fontSize: \"18px\",\r\n    whiteSpace: \"pre\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"rgba(154,160,163, 0.9)\",\r\n    },\r\n  },\r\n  boardNameForm: {\r\n    position: \"absolute\",\r\n    top: 0,\r\n    left: \"60px\",\r\n  },\r\n  boardNameInput: {\r\n    padding: \"0 12px\",\r\n    outline: \"none\",\r\n    border: \"none\",\r\n    borderRadius: \"5px\",\r\n    height: \"34px\",\r\n    fontSize: \"18px\",\r\n    whiteSpace: \"pre\",\r\n    display: \"none\",\r\n  },\r\n  starBt: {\r\n    margin: \"0 16px\",\r\n    backgroundColor: \"rgba(154,160,163, 0.9)\",\r\n    width: \"35px\",\r\n    height: \"35px\",\r\n    textTransform: \"none\",\r\n    outline: \"none\",\r\n    border: \"none\",\r\n    borderRadius: \"5px\",\r\n    fontWeight: \"bold\",\r\n    cursor: \"pointer\",\r\n    fontSize: \"16px\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"rgba(171,177,180, 0.9)\",\r\n    },\r\n  },\r\n  deleteBt: {\r\n    position: \"absolute\",\r\n    right: \"20px\",\r\n    backgroundColor: \"rgba(154,160,163, 0.9)\",\r\n    width: \"35px\",\r\n    height: \"35px\",\r\n    textTransform: \"none\",\r\n    outline: \"none\",\r\n    border: \"none\",\r\n    borderRadius: \"5px\",\r\n    fontWeight: \"bold\",\r\n    cursor: \"pointer\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"rgba(171,177,180, 0.9)\",\r\n    },\r\n  },\r\n  addBt: {\r\n    margin: \"0 32px 0 16px\",\r\n    flexShrink: 0,\r\n    width: \"300px\",\r\n    height: \"40px\",\r\n    textTransform: \"none\",\r\n    backgroundColor: \"rgb(161,168,171)\",\r\n    color: \"white\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"rgba(171,177,180, 0.9)\",\r\n    },\r\n  },\r\n  addList: {\r\n    flexShrink: 0,\r\n    position: \"absolute\",\r\n    top: 0,\r\n    left: 0,\r\n    backgroundColor: \"rgb(235,236,240)\",\r\n    width: \"300px\",\r\n    height: \"115px\",\r\n    margin: \"0 0 0 16px\",\r\n    display: \"none\",\r\n  },\r\n  addBtText: {},\r\n  addListInput: {\r\n    fontSize: \"15px\",\r\n    outline: \"none\",\r\n    border: \"2px solid rgb(0,121,191)\",\r\n    borderRadius: \"5px\",\r\n    width: \"256px\",\r\n    height: \"17px\",\r\n    padding: \"10px 10px\",\r\n    margin: \"12px 9px\",\r\n    resize: \"none\",\r\n    \"&::-webkit-scrollbar\": {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  addListBt: {\r\n    position: \"absolute\",\r\n    top: \"55px\",\r\n    left: \"10px\",\r\n    outline: \"none\",\r\n    border: \"none\",\r\n    zIndex: 1200,\r\n    borderRadius: \"5px\",\r\n    backgroundColor: \"rgb(90,172,68)\",\r\n    marginTop: \"10px\",\r\n    color: \"white\",\r\n    padding: \"8px 16px\",\r\n    fontSize: \"14px\",\r\n    cursor: \"pointer\",\r\n  },\r\n  closeIcon: {\r\n    position: \"relative\",\r\n    top: \"4px\",\r\n    left: \"100px\",\r\n    cursor: \"pointer\",\r\n    color: \"rgb(108,120,141)\",\r\n    fontSize: \"25px\",\r\n  },\r\n  deleteBoardbox: {\r\n    display: \"none\",\r\n    position: \"fixed\",\r\n    top: 0,\r\n    left: 0,\r\n    width: \"100vw\",\r\n    height: \"100vh\",\r\n    zIndex: 1100,\r\n    backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n  },\r\n  deleteBoard: {\r\n    backgroundColor: \"rgb(235,236,240)\",\r\n    width: \"370px\",\r\n    height: \"200px\",\r\n    margin: \"auto\",\r\n    position: \"relative\",\r\n    top: \"230px\",\r\n  },\r\n  deleteBoardtitle: {\r\n    position: \"relative\",\r\n    top: \"25px\",\r\n    left: \"43px\",\r\n  },\r\n  deleteBoarddesc: {\r\n    position: \"relative\",\r\n    top: \"50px\",\r\n    left: \"83px\",\r\n    fontSize: \"20px\",\r\n    color: \"black\",\r\n  },\r\n  deleteBoardBt: {\r\n    position: \"relative\",\r\n    top: \"70px\",\r\n    left: \"110px\",\r\n    outline: \"none\",\r\n    border: \"none\",\r\n    zIndex: 1200,\r\n    borderRadius: \"5px\",\r\n    backgroundColor: \"rgb(250,60,84)\",\r\n    marginTop: \"10px\",\r\n    color: \"white\",\r\n    padding: \"8px 16px\",\r\n    fontSize: \"15px\",\r\n    cursor: \"pointer\",\r\n  },\r\n  closeIconDeleteBoard: {\r\n    position: \"relative\",\r\n    top: \"-35px\",\r\n    left: \"165px\",\r\n    cursor: \"pointer\",\r\n    color: \"rgb(108,120,141)\",\r\n    fontSize: \"28px\",\r\n  },\r\n});\r\n\r\nconst Board = () => {\r\n  const classes = useStyles();\r\n\r\n  const history = useHistory();\r\n  const match = useRouteMatch<{ boardId: string }>();\r\n  const boardId = Number(match.params.boardId);\r\n\r\n  const dispatch = useDispatch();\r\n  const { boards } = useSelector<RootState, BoardState>(\r\n    (state: RootState) => state.trello\r\n  );\r\n  let lists: ListType = [];\r\n  let firstBoardName: string = \"\";\r\n  let boardStar: boolean = false;\r\n  boards.forEach((v, i) => {\r\n    if (v.id === boardId) {\r\n      lists = boards[i].lists;\r\n      firstBoardName = boards[i].boardName;\r\n      boardStar = boards[i].star;\r\n    }\r\n  });\r\n\r\n  const [boardName, setBoardName] = useState(firstBoardName);\r\n  const [newList, setNewList] = useState(\"\");\r\n\r\n  const bnEl = useRef<HTMLInputElement>(null);\r\n  const wtEl = useRef<HTMLInputElement>(null);\r\n  const stEl = useRef<HTMLButtonElement>(null);\r\n  const addListEl = useRef<HTMLDivElement>(null);\r\n  const deleteBoardEl = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    setBoardName(firstBoardName);\r\n  }, [firstBoardName]);\r\n\r\n  const displayBlock = (\r\n    ref: React.RefObject<HTMLInputElement | HTMLDivElement>\r\n  ) => {\r\n    if (ref.current) {\r\n      ref.current.style.display = \"block\";\r\n    }\r\n  };\r\n  const displayNone = (\r\n    ref: React.RefObject<HTMLInputElement | HTMLDivElement>\r\n  ) => {\r\n    if (ref.current) {\r\n      ref.current.style.display = \"none\";\r\n    }\r\n  };\r\n  const onClickText = () => {\r\n    displayBlock(bnEl);\r\n    if (bnEl.current && wtEl.current) {\r\n      bnEl.current.style.width = wtEl.current.scrollWidth - 24 + \"px\";\r\n    }\r\n  };\r\n  const onSubmitForm = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    onBlurInput();\r\n  };\r\n  const onBlurInput = () => {\r\n    if (boardName !== \"\") {\r\n      displayNone(bnEl);\r\n      dispatch(changeBoardName(boardName, boardId));\r\n    }\r\n  };\r\n  const onChangeName = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { value } = e.target;\r\n    setBoardName(value);\r\n    if (bnEl.current && wtEl.current) {\r\n      bnEl.current.style.width = wtEl.current.scrollWidth - 8 + \"px\";\r\n    }\r\n  };\r\n  const onClickStar = () => {\r\n    dispatch(starBoard(boardId));\r\n  };\r\n  const onClickDeleteBoard = () => {\r\n    displayNone(deleteBoardEl);\r\n    dispatch(deleteBoard(boardId));\r\n    history.push(\"/\");\r\n  };\r\n  const onChangeList = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { value } = e.target;\r\n    setNewList(value);\r\n  };\r\n  const onClickAddList = () => {\r\n    if (newList !== \"\") {\r\n      dispatch(addList(newList, boardId));\r\n      onClickClose();\r\n    }\r\n  };\r\n  const onClickClose = () => {\r\n    displayNone(addListEl);\r\n    setNewList(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <div className={classes.screen}>\r\n        <div className={classes.boardName}>\r\n          {boardStar ? (\r\n            <button\r\n              ref={stEl}\r\n              style={{ color: \"yellow\" }}\r\n              className={classes.starBt}\r\n              onClick={onClickStar}\r\n            >\r\n              ☆\r\n            </button>\r\n          ) : (\r\n            <button\r\n              ref={stEl}\r\n              style={{ color: \"white\" }}\r\n              className={classes.starBt}\r\n              onClick={onClickStar}\r\n            >\r\n              ☆\r\n            </button>\r\n          )}\r\n          <Typography\r\n            ref={wtEl}\r\n            className={classes.boardNameText}\r\n            variant=\"h6\"\r\n            onClick={onClickText}\r\n          >\r\n            {boardName}\r\n          </Typography>\r\n          <button\r\n            className={classes.deleteBt}\r\n            onClick={() => displayBlock(deleteBoardEl)}\r\n          >\r\n            <DeleteIcon style={{ fontSize: \"20px\", color: \"white\" }} />\r\n          </button>\r\n          <div ref={deleteBoardEl} className={classes.deleteBoardbox}>\r\n            <Card className={classes.deleteBoard}>\r\n              <div>\r\n                <h3 className={classes.deleteBoardtitle}>Delete Board</h3>\r\n                <p className={classes.deleteBoarddesc}>\r\n                  삭제 후 되돌릴 수 없습니다.\r\n                </p>\r\n                <button\r\n                  className={classes.deleteBoardBt}\r\n                  onClick={onClickDeleteBoard}\r\n                >\r\n                  Delete This Board\r\n                </button>\r\n                <CloseIcon\r\n                  className={classes.closeIconDeleteBoard}\r\n                  onClick={() => displayNone(deleteBoardEl)}\r\n                />\r\n              </div>\r\n            </Card>\r\n          </div>\r\n          <form className={classes.boardNameForm} onSubmit={onSubmitForm}>\r\n            <input\r\n              ref={bnEl}\r\n              className={classes.boardNameInput}\r\n              value={boardName}\r\n              onChange={onChangeName}\r\n              onBlur={onBlurInput}\r\n              maxLength={15}\r\n            />\r\n          </form>\r\n        </div>\r\n        <div style={{ display: \"flex\" }}>\r\n          {lists === undefined ? null : (\r\n            <>\r\n              {lists.map((v: { title: string; cards: string[] }, i: number) => (\r\n                <List\r\n                  key={i}\r\n                  title={v.title}\r\n                  list={v.cards}\r\n                  index={i}\r\n                  boardId={boardId}\r\n                />\r\n              ))}\r\n            </>\r\n          )}\r\n          <div style={{ position: \"relative\" }}>\r\n            <Button\r\n              className={classes.addBt}\r\n              onClick={() => displayBlock(addListEl)}\r\n              disableRipple\r\n            >\r\n              <div style={{ position: \"absolute\", left: \"20px\" }}>\r\n                + Add a List\r\n              </div>\r\n            </Button>\r\n\r\n            <Card ref={addListEl} className={classes.addList}>\r\n              <div className={classes.addBtText}>\r\n                <input\r\n                  className={classes.addListInput}\r\n                  placeholder=\"Input List title ...\"\r\n                  onChange={onChangeList}\r\n                  value={newList}\r\n                  maxLength={15}\r\n                />\r\n                <button className={classes.addListBt} onClick={onClickAddList}>\r\n                  Add List\r\n                </button>\r\n                <CloseIcon\r\n                  className={classes.closeIcon}\r\n                  onClick={onClickClose}\r\n                />\r\n              </div>\r\n            </Card>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Trello from \"components/Trello\";\nimport Board from \"components/Board\";\nimport \"app.css\";\n\nconst App = () => {\n  return (\n    <>\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <Switch>\n          <Route exact path=\"/\" component={Trello} />\n          <Route exact path=\"/board/:boardId\" component={Board} />\n        </Switch>\n      </BrowserRouter>\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}